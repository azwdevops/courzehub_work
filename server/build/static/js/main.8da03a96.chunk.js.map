{"version":3,"sources":["shared/axios.js","shared/PrivateRoute.js","shared/scripts.js","shared/globals.js","shared/sharedFunctions.js","components/common/MinDialog.js","redux/actions/types.js","redux/actions/shared.js","api/postapi.js","api/getapi.js","api/patchapi.js","redux/actions/auth.js","components/users/Login.js","components/common/MediumDialog.js","components/users/Signup.js","components/users/ForgotPassword.js","components/users/ReactivateAccount.js","components/common/Header.js","pages/Home/Home.js","components/common/Links/SysAdminLinks.js","components/common/Links/OrganizationAdminLinks.js","components/common/Links/WorkerLinks.js","components/common/Sidebar/Sidebar.js","pages/Dashboard.js","pages/ActivateAccount.js","pages/ResetPasswordConfirm.js","pages/NotFound.js","components/users/ChangePassword.js","components/common/Markdown/Toolbar.js","components/common/Markdown/Markdown.js","redux/actions/work.js","pages/worker/components/WorkerApplication.js","pages/Profile.js","pages/systemAdmin/MaintainOrganizations/components/AddOrganization.js","pages/systemAdmin/MaintainOrganizations/components/AddOrganizationAdmin.js","pages/systemAdmin/MaintainOrganizations/MaintainOrganizations.js","pages/organizationAdmin/Tasks/components/AddTask.js","pages/organizationAdmin/Tasks/components/EditTask.js","pages/organizationAdmin/Tasks/MaintainTasks.js","pages/systemAdmin/MaintainWorkers/components/EditWorkerApplication.js","pages/systemAdmin/MaintainWorkers/MaintainWorkers.js","components/common/MaxDialog.js","pages/worker/components/TasksAvailable/components/Instructions.js","pages/worker/components/TasksAvailable/TasksAvailable.js","pages/worker/components/TasksOngoing/TasksOngoing.js","pages/worker/components/TasksSubmitted/TasksSubmitted.js","pages/worker/WorkCenter/WorkCenter.js","App.js","reportWebVitals.js","redux/reducers/auth.js","redux/reducers/shared.js","redux/utility.js","redux/reducers/work.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["URL","PrivateRoute","Component","component","rest","render","props","localStorage","getItem","to","showNavbar","nav","document","getElementById","bodypd","classList","toggle","globals","success","error","fillFields","unknown_error","dev","testProduction","liveProduction","devHome","testHome","productionHome","ifEmpty","object","i","resetFormValues","MinDialog","Dialog","open","isOpen","maxWidth","style","margin","fullWidth","children","OPEN_SIGNUP","CLOSE_SIGNUP","OPEN_LOGIN","CLOSE_LOGIN","AUTH_SUCCESS","LOGOUT","OPEN_FORGOT_PASSWORD","CLOSE_FORGOT_PASSWORD","OPEN_RESEND_ACTIVATION","CLOSE_RESEND_ACTIVATION","OPEN_PASSWORD_RESET_CONFIRM","CLOSE_PASSWORD_RESET_CONFIRM","OPEN_CHANGE_PASSWORD","CLOSE_CHANGE_PASSWORD","SET_ALERT","REMOVE_ALERT","START_LOADING","STOP_LOADING","ADD_ORGANIZATION","GET_ORGANIZATIONS","UPDATE_ORGANIZATION","NEW_ORGANIZATION_TASK","GET_TASKS","EDIT_ORGANIZATION_TASK","GET_WORKERS","EDIT_WORKER","setAlert","alertType","detail","dispatch","a","type","payload","status","setTimeout","showError","err","response","window","alert","data","stopLoading","API","axios","create","baseURL","interceptors","request","use","req","headers","Authorization","Accept","signupUser","newUser","post","activateAccount","activation_token","resendActivation","email","signIn","loginData","resetPassword","setPassword","newPasswords","password_token","changePassword","passwords","userId","addOrganization","body","newOrganizationTask","workerApplication","getOrganizations","get","getAllTasks","getWorkers","updateUser","updatedUser","patch","addOrRemoveOrganizationAdmin","editOrganizationTask","editWorkerOrApplication","get_user","then","res","actionTypes","user","catch","clear","logout","history","replace","connect","state","loading","shared","loginForm","auth","startLoading","newAlert","loginUser","resetForm","api","setItem","access","console","log","finally","login","closeLogin","openPasswordReset","openSignup","openResendActivation","useState","password","setLoginData","handleChange","e","target","name","value","className","id","htmlFor","onChange","CircularProgress","position","marginLeft","onClick","preventDefault","justifySelf","MediumDialog","signupForm","closeSignup","signup_user","first_name","last_name","username","confirm_password","setNewUser","required","forgotPasswordForm","reset_password","closeForgotPassword","setEmail","trim","resendActivationForm","closeResendActivation","resend_activation","Header","useDispatch","useLocation","useHistory","session_cookie","useSelector","userImage","Avatar","alt","src","charAt","profile_type","push","SysAdminLinks","Link","pathname","aria-hidden","OrganizationAdminLinks","WorkerLinks","loggedIn","logoutUser","class","Dashboard","activateUser","useParams","resetPasswordConfirmForm","setNewPassword","set_password","openNewPassword","closeNewPassword","new_password","setNewPasswords","NotFound","changePasswordForm","changeUserPassword","change_password","closeChangePassword","current_password","confirm_new_password","setPasswords","Toolbar","format","com","val","execCommand","Markdown","content","setContent","html","add_or_remove_organization_admin","updated_organization","worker_application","openWorkerApplication","setOpenWorkerApplication","description","setDescription","mpesa_number","national_id","occupation","applicationDetails","setApplicationDetails","onSubmit","about_worker","bio","update_user","openChangePassword","setUpdatedUser","useEffect","organization_data","add_organization","openAddOrganization","setOpenAddOrganization","initials","newOrganization","setNewOrganization","addOrganizationAdmin","openAddOrganizationAdmin","organizationId","setOpenAddOrganizationAdmin","userEmail","setUserEmail","actionType","organizations","work","organizations_data","get_organizations","removeOrganizationAdmin","currentOrganizationId","setCurrentOrganizationId","length","map","organization","index","organization_admin_email","title","confirm","new_task","new_organization_task","openAddTask","setOpenAddTask","user_minimum_rating","attachment","newTask","setNewTask","instructions","setInstructions","formData","FormData","append","min","max","disabled","selected","files","editOrganization","updated_task","edit_organization_task","openEditTask","currentTask","setCurrentTask","setOpenEditTask","organizationTasks","organization_tasks","tasks_data","get_all_tasks","task","openEditTaskForm","updated_application","edit_worker_or_application","openEditWorkerApplication","currentWorkerApplication","setOpenEditWorkerApplication","setCurrentWorkerApplication","full_name","applied_on","rejection_reason","applicationId","worker_or_application","readOnly","moment","workers","workers_applications","get_workers","worker","openEditWorkerApplicationForm","MaxDialog","Instructions","openInstructions","setOpenInstructions","parse","openTasksAvailable","setOpenTasksAvailable","availableTasks","setAvailableTasks","url","available_tasks","fetchData","handleOpenInstructions","TasksOngoing","openTasksOngoing","setOpenTasksOngoing","TasksSubmitted","openTasksSubmitted","setOpenTasksSubmitted","WorkCenter","getUser","exact","path","Home","ResetPasswordConfirm","ActivateAccount","MaintainOrganizations","MaintainWorkers","MaintainTasks","Profile","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","authReducer","action","sharedInitialState","sharedReducer","updateObject","oldObject","updatedProperties","updateOrganization","action_type","worker_data","workReducer","combineReducers","store","createStore","reducers","composeWithDevTools","applyMiddleware","thunk","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.8da03a96.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport globals from \"./globals\";\r\n\r\nconst { liveProduction, testProduction, devHome, testHome, productionHome } =\r\n  globals;\r\n\r\nlet URL;\r\n\r\nif (testProduction) {\r\n  URL = testHome;\r\n} else if (liveProduction) {\r\n  URL = productionHome;\r\n} else {\r\n  URL = devHome;\r\n}\r\n\r\nconst API = axios.create({ baseURL: URL });\r\n\r\nAPI.interceptors.request.use((req) => {\r\n  if (localStorage.getItem(\"session_cookie\")) {\r\n    req.headers.Authorization = `Bearer ${localStorage.getItem(\r\n      \"session_cookie\"\r\n    )}`;\r\n    req.headers.Accept = \"application/json\";\r\n  }\r\n  return req;\r\n});\r\n\r\nexport default API;\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={(props) =>\r\n      localStorage.getItem(\"session_cookie\") ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect to=\"/\" />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nexport default PrivateRoute;\r\n","// toggle sidebar on menu button click\r\nexport const showNavbar = () => {\r\n  // const toggle = document.getElementById(\"header-toggle\")\r\n  const nav = document.getElementById(\"nav-bar\"),\r\n    bodypd = document.getElementById(\"body-pd\");\r\n  // headerpd = document.getElementById(\"header\");\r\n\r\n  // show navbar\r\n  nav.classList.toggle(\"show\");\r\n\r\n  // change icon\r\n  // toggle.classList.toggle(\"bx-x\");\r\n\r\n  // add padding to body\r\n  bodypd.classList.toggle(\"body-pd\");\r\n\r\n  // add padding to header\r\n  //   headerpd.classList.toggle(\"body-pd\");\r\n};\r\n","const globals = {\r\n  success: \"success\",\r\n  error: \"error\",\r\n  fillFields: \"Please fill all fields\",\r\n  unknown_error: \"An unknown error occurred, please try again later\",\r\n  dev: false,\r\n  testProduction: false, // for use in heroku\r\n  liveProduction: true, // for work.courzehub.com domain\r\n  devHome: \"http://localhost:8000\", // for local development\r\n  testHome: \"https://courzehub-work.herokuapp.com\", // for heroku production\r\n  productionHome: \"https://work.courzehub.com\", // for live production\r\n};\r\nexport default globals;\r\n","// check if any field in an object is empty\r\nexport const ifEmpty = (object) => {\r\n  for (const i in object) {\r\n    if (`${object[i]}` === \"\") {\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n};\r\n\r\n// function to reset form values to blank\r\nexport const resetFormValues = (object) => {\r\n  for (const i in object) {\r\n    object[i] = \"\";\r\n  }\r\n};\r\n\r\n// function to get max date to display on user entry form\r\nexport const maxDate = () => {\r\n  const today = new Date();\r\n  const day = today.getDate() < 10 ? \"0\" + today.getDate() : today.getDate();\r\n  const month =\r\n    today.getMonth() + 1 < 10\r\n      ? \"0\" + (today.getMonth() + 1)\r\n      : today.getMonth() + 1;\r\n  const max_date = today.getFullYear() + \"-\" + month + \"-\" + day;\r\n  return max_date;\r\n};\r\n\r\n// function to get min date to display on exam date\r\nexport const minDate = () => {\r\n  const today = new Date();\r\n  const day = today.getDate() < 10 ? \"0\" + today.getDate() : today.getDate();\r\n  const month =\r\n    today.getMonth() + 1 < 10\r\n      ? \"0\" + (today.getMonth() + 1)\r\n      : today.getMonth() + 1;\r\n  const min_date = today.getFullYear() + \"-\" + month + \"-\" + day;\r\n  return min_date;\r\n};\r\n","// material ui items\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\n\r\nconst MinDialog = (props) => {\r\n  return (\r\n    <Dialog\r\n      open={props?.isOpen}\r\n      maxWidth=\"sm\"\r\n      style={{ maxWidth: props?.maxWidth, margin: \"auto\" }}\r\n      fullWidth\r\n    >\r\n      {props.children}\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default MinDialog;\r\n","// user types\r\nexport const OPEN_SIGNUP = \"OPEN_SIGNUP\";\r\nexport const CLOSE_SIGNUP = \"CLOSE_SIGNUP\";\r\nexport const OPEN_LOGIN = \"OPEN_LOGIN\";\r\nexport const CLOSE_LOGIN = \"CLOSE_LOGIN\";\r\nexport const AUTH_SUCCESS = \"AUTH_SUCCESS\";\r\nexport const LOGOUT = \"LOGOUT\";\r\nexport const OPEN_FORGOT_PASSWORD = \"OPEN_FORGOT_PASSWORD\";\r\nexport const CLOSE_FORGOT_PASSWORD = \"CLOSE_FORGOT_PASSWORD\";\r\nexport const OPEN_RESEND_ACTIVATION = \"OPEN_RESEND_ACTIVATION\";\r\nexport const CLOSE_RESEND_ACTIVATION = \"CLOSE_RESEND_ACTIVATION\";\r\nexport const OPEN_PASSWORD_RESET_CONFIRM = \"OPEN_PASSWORD_RESET_CONFIRM\";\r\nexport const CLOSE_PASSWORD_RESET_CONFIRM = \"CLOSE_PASSWORD_RESET_CONFIRM\";\r\nexport const OPEN_CHANGE_PASSWORD = \"OPEN_CHANGE_PASSWORD\";\r\nexport const CLOSE_CHANGE_PASSWORD = \"CLOSE_CHANGE_PASSWORD\";\r\n\r\n// shared types\r\nexport const SET_ALERT = \"SET_ALERT\";\r\nexport const REMOVE_ALERT = \"REMOVE_ALERT\";\r\nexport const START_LOADING = \"START_LOADING\";\r\nexport const STOP_LOADING = \"STOP_LOADING\";\r\n\r\n// work types\r\nexport const ADD_ORGANIZATION = \"ADD_ORGANIZATION\";\r\nexport const GET_ORGANIZATIONS = \"GET_ORGANIZATIONS\";\r\nexport const UPDATE_ORGANIZATION = \"UPDATE_ORGANIZATION\";\r\nexport const NEW_ORGANIZATION_TASK = \"NEW_ORGANIZATION_TASK\";\r\nexport const GET_TASKS = \"GET_TASKS\";\r\nexport const EDIT_ORGANIZATION_TASK = \"EDIT_ORGANIZATION_TASK\";\r\nexport const GET_WORKERS = \"GET_WORKERS\";\r\nexport const EDIT_WORKER = \"EDIT_WORKER\";\r\n","import { SET_ALERT, REMOVE_ALERT, STOP_LOADING } from \"./types\";\r\nimport globals from \"../../shared/globals\";\r\n\r\nconst { unknown_error } = globals;\r\n\r\nexport const setAlert = (alertType, detail) => async (dispatch) => {\r\n  // set alert\r\n  // alertType is either success or error\r\n  // detail is the message\r\n  dispatch({ type: SET_ALERT, payload: { status: true, alertType, detail } });\r\n\r\n  // remove alert after 3 seconds\r\n  setTimeout(() => {\r\n    dispatch({\r\n      type: REMOVE_ALERT,\r\n      payload: { status: false, alertType: \"\", detail: \"\" },\r\n    });\r\n  }, 3000);\r\n};\r\n\r\n// START OF reusable functions\r\n// show error function\r\nexport const showError = (err) => {\r\n  if (\r\n    err?.response?.status === 400 ||\r\n    err?.response?.status === 401 ||\r\n    err?.response?.status === 403\r\n  ) {\r\n    window.alert(err?.response?.data?.detail);\r\n  } else if (err?.response?.status === 413) {\r\n    window.alert(\"Video file too large, a maximum of 95MB allowed.\");\r\n  } else {\r\n    window.alert(unknown_error);\r\n  }\r\n};\r\nexport const stopLoading = (dispatch) => {\r\n  dispatch({ type: STOP_LOADING });\r\n};\r\n\r\n// END OF REUSABLE FUNCTIONS\r\n","import API from \"../shared/axios\";\r\n\r\n// user routes\r\n\r\n// signup\r\nexport const signupUser = (newUser) => API.post(\"/api/user/signup/\", newUser);\r\n// activate user account\r\nexport const activateAccount = (activation_token) =>\r\n  API.post(\"/api/user/activate-user-account/\", { activation_token });\r\n\r\n// resend account activation email\r\nexport const resendActivation = (email) =>\r\n  API.post(\"/api/user/resend-account-activation-link/\", { email });\r\n\r\n// sign in user\r\nexport const signIn = (loginData) => API.post(\"/api/user/login/\", loginData);\r\n\r\n// send password reset email\r\nexport const resetPassword = (email) =>\r\n  API.post(\"/api/user/user-request-password-reset/\", { email });\r\n\r\n// set new password using reset link sent from above\r\nexport const setPassword = (newPasswords, password_token) =>\r\n  API.post(\"/api/user/user-set-new-password/\", {\r\n    ...newPasswords,\r\n    password_token,\r\n  });\r\n\r\n// user change password\r\nexport const changePassword = (passwords, userId) =>\r\n  API.post(`/api/user/change-user-password/${userId}/`, passwords);\r\n\r\n// WORK API\r\nexport const addOrganization = (userId, body) =>\r\n  API.post(`/api/work/maintain-organizations/${userId}/`, body);\r\n\r\n// organization admin create task API\r\nexport const newOrganizationTask = (userId, body) =>\r\n  API.post(`/api/work/maintain-organization-tasks/${userId}/`, body);\r\n\r\n// worker application\r\nexport const workerApplication = (userId, body) =>\r\n  API.post(`/api/work/worker-application/${userId}/`, body);\r\n","import API from \"../shared/axios\";\r\n\r\n// get user data\r\nexport const getUser = () => API.get(\"/api/user/get-user-data/\");\r\n\r\n// WORK API's\r\n\r\nexport const getOrganizations = (userId) =>\r\n  API.get(`/api/work/maintain-organizations/${userId}/`);\r\n\r\n// get all tasks for organization\r\nexport const getAllTasks = (userId) =>\r\n  API.get(`/api/work/maintain-organization-tasks/${userId}/`);\r\n\r\n// get worker applications\r\nexport const getWorkers = (userId) =>\r\n  API.get(`/api/work/worker-application/${userId}/`);\r\n","import API from \"../shared/axios\";\r\n\r\n// patch user data\r\nexport const updateUser = (updatedUser, userId) =>\r\n  API.patch(`/api/user/update-user-details/${userId}/`, updatedUser);\r\n\r\n// WORK API's\r\nexport const addOrRemoveOrganizationAdmin = (userId, body) =>\r\n  API.patch(`/api/work/maintain-organizations/${userId}/`, body);\r\n\r\n// organization admin edit task API\r\nexport const editOrganizationTask = (userId, body) =>\r\n  API.patch(`/api/work/maintain-organization-tasks/${userId}/`, body);\r\n\r\n// system admin edit worker or application\r\nexport const editWorkerOrApplication = (userId, body) =>\r\n  API.patch(`/api/work/worker-application/${userId}/`, body);\r\n","// axios items\r\nimport * as api from \"../../api/index\";\r\n\r\n// redux API items\r\n\r\nimport * as actionTypes from \"../actions/types\";\r\nimport { setAlert } from \"./shared\";\r\n\r\n// shared items\r\nimport globals from \"../../shared/globals\";\r\n\r\nconst { error, success, unknown_error } = globals;\r\n\r\n// sign up user\r\nexport const signup_user = (newUser, resetForm) => async (dispatch) => {\r\n  await api\r\n    .signupUser(newUser)\r\n    .then((res) => {\r\n      // dispatch({ type: AUTH_SUCCESS, payload: data?.user });\r\n      dispatch(setAlert(success, res.data?.detail));\r\n      resetForm();\r\n    })\r\n    .catch((err) => {\r\n      // if bad client request\r\n      if (err.response?.status === 400) {\r\n        dispatch(setAlert(error, err.response.data?.detail));\r\n      } else {\r\n        alert(unknown_error);\r\n      }\r\n    })\r\n    .finally(() => {\r\n      dispatch({ type: actionTypes.STOP_LOADING });\r\n    });\r\n};\r\n\r\n// activate user account\r\nexport const activate_account = (body) => async (dispatch) => {\r\n  const { activation_token, history } = body;\r\n  await api\r\n    .activateAccount(activation_token)\r\n    .then((res) => {\r\n      alert(res.data?.detail);\r\n      dispatch({ type: actionTypes.OPEN_LOGIN });\r\n    })\r\n    .catch((err) => {\r\n      if (err.response.status === 400) {\r\n        alert(err.response.data?.detail);\r\n        // if token has expired or is invalid, open this form for user to request a new token\r\n        dispatch({ type: actionTypes.OPEN_RESEND_ACTIVATION });\r\n      } else {\r\n        alert(unknown_error);\r\n      }\r\n    })\r\n    .finally(() => {\r\n      dispatch({ type: actionTypes.STOP_LOADING });\r\n      history.replace(\"/\");\r\n    });\r\n};\r\n\r\n// resend user account activation link\r\nexport const resend_activation = (email, resetForm) => async (dispatch) => {\r\n  await api\r\n    .resendActivation(email)\r\n    .then((res) => {\r\n      dispatch(setAlert(success, \"Activation link sent to email.\"));\r\n      resetForm();\r\n    })\r\n    .catch((err) => {\r\n      // if bad client request\r\n      if (err.response?.status === 400) {\r\n        dispatch(setAlert(error, err.response.data?.detail));\r\n      } else {\r\n        dispatch(setAlert(error, \"An error occurred, please try again later\"));\r\n      }\r\n    })\r\n    .finally(() => {\r\n      // dispatch the stop loading action\r\n      dispatch({ type: actionTypes.STOP_LOADING });\r\n    });\r\n};\r\n\r\n// login user\r\nexport const login = (loginData, resetForm) => async (dispatch) => {\r\n  await api\r\n    .signIn(loginData)\r\n    .then((res) => {\r\n      localStorage.setItem(\"session_cookie\", res.data?.access);\r\n      resetForm();\r\n      // dispatch success message\r\n      dispatch({ type: actionTypes.CLOSE_LOGIN });\r\n      // get user details\r\n      dispatch(get_user());\r\n    })\r\n    .catch((err) => {\r\n      if (err.response?.status === 400) {\r\n        dispatch(setAlert(error, err.response.data?.detail));\r\n      } else if (err.response?.status === 401) {\r\n        dispatch(\r\n          setAlert(error, \"Invalid login, ensure your account is activated\")\r\n        );\r\n      } else {\r\n        console.log(err);\r\n      }\r\n    })\r\n    .finally(() => {\r\n      // dispatch the stop loading action\r\n      dispatch({ type: actionTypes.STOP_LOADING });\r\n    });\r\n};\r\n\r\n// reset user password by sending an email with a reset link\r\nexport const reset_password = (email, resetForm) => async (dispatch) => {\r\n  await api\r\n    .resetPassword(email)\r\n    .then((res) => {\r\n      dispatch(setAlert(success, res.data?.detail));\r\n      resetForm();\r\n    })\r\n    .catch((err) => {\r\n      if (err.response?.status === 400) {\r\n        dispatch(setAlert(error, err.response.data?.detail));\r\n      } else {\r\n        dispatch(setAlert(error, unknown_error));\r\n      }\r\n    })\r\n    .finally(() => {\r\n      dispatch({ type: actionTypes.STOP_LOADING });\r\n    });\r\n};\r\n\r\n// set new user password\r\nexport const set_password = (newPasswords, password_token, history) => async (\r\n  dispatch\r\n) => {\r\n  await api\r\n    .setPassword(newPasswords, password_token)\r\n    .then((res) => {\r\n      alert(res.data?.detail);\r\n      dispatch({ type: actionTypes.CLOSE_PASSWORD_RESET_CONFIRM });\r\n      history.replace(\"/\");\r\n      dispatch({ type: actionTypes.OPEN_LOGIN });\r\n    })\r\n    .catch((err) => {\r\n      if (err.response?.status === 400) {\r\n        dispatch(setAlert(error, err.response.data?.detail));\r\n      } else {\r\n        dispatch(setAlert(error, unknown_error));\r\n      }\r\n    })\r\n    .finally(() => {\r\n      dispatch({ type: actionTypes.STOP_LOADING });\r\n    });\r\n};\r\n\r\n// patch/update user data\r\nexport const update_user = (updatedUser, userId) => async (dispatch) => {\r\n  await api\r\n    .updateUser(updatedUser, userId)\r\n    .then((res) => {\r\n      dispatch({ type: actionTypes.AUTH_SUCCESS, payload: res.data?.user });\r\n      alert(res.data?.detail);\r\n    })\r\n    .catch((err) => {\r\n      if (err.response?.status === 400) {\r\n        alert(err.response.data?.detail);\r\n      } else {\r\n        alert(unknown_error);\r\n      }\r\n    })\r\n    .finally(() => {\r\n      dispatch({ type: actionTypes.STOP_LOADING });\r\n    });\r\n};\r\n\r\n// user change password\r\nexport const change_password = (passwords, userId, history) => async (\r\n  dispatch\r\n) => {\r\n  await api\r\n    .changePassword(passwords, userId)\r\n    .then((res) => {\r\n      alert(success, res.data?.detail);\r\n      dispatch({ type: actionTypes.CLOSE_CHANGE_PASSWORD });\r\n      dispatch(logout(history));\r\n      dispatch({ type: actionTypes.OPEN_LOGIN });\r\n    })\r\n    .catch((err) => {\r\n      if (err.response?.status === 400) {\r\n        dispatch(setAlert(error, err.response.data?.detail));\r\n      } else {\r\n        dispatch(setAlert(error, unknown_error));\r\n      }\r\n    })\r\n    .finally(() => {\r\n      dispatch({ type: actionTypes.STOP_LOADING });\r\n    });\r\n};\r\n\r\n// get user data\r\nexport const get_user = () => async (dispatch) => {\r\n  await api\r\n    .getUser()\r\n    .then((res) => {\r\n      dispatch({ type: actionTypes.AUTH_SUCCESS, payload: res.data?.user });\r\n    })\r\n    .catch((err) => {\r\n      dispatch({ type: actionTypes.LOGOUT });\r\n      localStorage.clear();\r\n    });\r\n};\r\n\r\n// logout user\r\nexport const logout = (history) => async (dispatch) => {\r\n  localStorage.clear();\r\n  dispatch({ type: actionTypes.LOGOUT });\r\n  history.replace(\"/\");\r\n};\r\n","// import installed packages\r\nimport { useState, useRef } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\n// import styles\r\n\r\n// import material ui items\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n// import shared/global items\r\nimport globals from \"../../shared/globals\";\r\nimport { ifEmpty, resetFormValues } from \"../../shared/sharedFunctions\";\r\n// import components/pages\r\nimport MinDialog from \"../common/MinDialog\";\r\n\r\n// import redux API\r\nimport {\r\n  CLOSE_LOGIN,\r\n  OPEN_FORGOT_PASSWORD,\r\n  OPEN_RESEND_ACTIVATION,\r\n  OPEN_SIGNUP,\r\n  START_LOADING,\r\n} from \"../../redux/actions/types\";\r\nimport { setAlert } from \"../../redux/actions/shared\";\r\nimport { login } from \"../../redux/actions/auth\";\r\n\r\nconst Login = (props) => {\r\n  const { loading, alert, loginForm } = props; // extract state from props\r\n  const {\r\n    startLoading,\r\n    newAlert,\r\n    loginUser,\r\n    closeLogin,\r\n    openPasswordReset,\r\n    openSignup,\r\n    openResendActivation,\r\n  } = props; // extract dispatch action from props\r\n  const [loginData, setLoginData] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  // destructuring\r\n  const { error } = globals;\r\n  const { email, password } = loginData;\r\n\r\n  // reset form values\r\n  const resetForm = () => {\r\n    resetFormValues(loginData);\r\n  };\r\n\r\n  // function to close login form\r\n  const closeLoginForm = () => {\r\n    closeLogin();\r\n    resetForm();\r\n  };\r\n\r\n  const handleLogin = (e) => {\r\n    e.preventDefault();\r\n    if (ifEmpty(loginData)) {\r\n      return newAlert(error, \"Email and password required\");\r\n    }\r\n    startLoading();\r\n    // call the signup action creator\r\n    loginUser(loginData, resetForm);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setLoginData({ ...loginData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  // open password reset form\r\n  const openPasswordResetForm = () => {\r\n    openPasswordReset();\r\n    closeLogin();\r\n  };\r\n\r\n  //open sign up form\r\n  const openSignupForm = () => {\r\n    openSignup();\r\n    closeLogin();\r\n  };\r\n  // open resend activation\r\n  const openResendActivationForm = () => {\r\n    openResendActivation();\r\n    closeLogin();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <MinDialog isOpen={loginForm} maxWidth=\"500px\">\r\n        <form className=\"dialog\" id={loading ? \"formSubmitting\" : \"\"}>\r\n          <h3>Login here</h3>\r\n          <p className={`response__message ${alert.alertType}`}>\r\n            {alert.status && alert.detail}\r\n          </p>\r\n          <div className=\"dialog__rowSingleItem\">\r\n            <label htmlFor=\"\">Email</label>\r\n            <input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              onChange={handleChange}\r\n              value={email}\r\n            />\r\n          </div>\r\n          {loading && (\r\n            <CircularProgress\r\n              style={{ position: \"absolute\", marginLeft: \"40%\" }}\r\n            />\r\n          )}\r\n          <div className=\"dialog__rowSingleItem\">\r\n            <label htmlFor=\"\">Password</label>\r\n            <input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              onChange={handleChange}\r\n              value={password}\r\n            />\r\n          </div>\r\n          <div className=\"form__Buttons\">\r\n            <button type=\"button\" onClick={closeLoginForm}>\r\n              Close\r\n            </button>\r\n            <button type=\"submit\" onClick={handleLogin}>\r\n              Login\r\n            </button>\r\n          </div>\r\n          <div className=\"extra__formButtons\">\r\n            <label\r\n              htmlFor=\"\"\r\n              className=\"button\"\r\n              onClick={openPasswordResetForm}\r\n            >\r\n              Forgot Password\r\n            </label>\r\n            <label\r\n              htmlFor=\"\"\r\n              className=\"button\"\r\n              style={{ justifySelf: \"end\" }}\r\n              onClick={openSignupForm}\r\n            >\r\n              Create Account\r\n            </label>\r\n          </div>\r\n          <div className=\"extra__formButtons\">\r\n            <label\r\n              htmlFor=\"\"\r\n              className=\"button\"\r\n              onClick={openResendActivationForm}\r\n            >\r\n              Resend Activation\r\n            </label>\r\n          </div>\r\n        </form>\r\n      </MinDialog>\r\n      {/* components */}\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    loading: state.shared?.loading,\r\n    loginForm: state.auth.loginForm,\r\n    alert: state.shared.alert,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    startLoading: () => dispatch({ type: START_LOADING }),\r\n    newAlert: (type, detail) => dispatch(setAlert(type, detail)),\r\n    loginUser: (loginData, resetForm) => dispatch(login(loginData, resetForm)),\r\n    closeLogin: () => dispatch({ type: CLOSE_LOGIN }),\r\n    openPasswordReset: () => dispatch({ type: OPEN_FORGOT_PASSWORD }),\r\n    openSignup: () => dispatch({ type: OPEN_SIGNUP }),\r\n    openResendActivation: () => dispatch({ type: OPEN_RESEND_ACTIVATION }),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n","// material ui items\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\n\r\nconst MediumDialog = (props) => {\r\n  return (\r\n    <Dialog\r\n      open={props?.isOpen}\r\n      maxWidth=\"md\"\r\n      style={{ maxWidth: props?.maxWidth, margin: \"auto\" }}\r\n      fullWidth\r\n    >\r\n      {props.children}\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default MediumDialog;\r\n","// import installed packages\r\nimport { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n// import styles\r\n\r\n// import material ui items\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n// import shared/global items\r\nimport globals from \"../../shared/globals\";\r\nimport { ifEmpty, resetFormValues } from \"../../shared/sharedFunctions\";\r\n// import components/pages\r\nimport MediumDialog from \"../common/MediumDialog\";\r\n// import redux API\r\nimport { CLOSE_SIGNUP, START_LOADING } from \"../../redux/actions/types\";\r\nimport { signup_user } from \"../../redux/actions/auth\";\r\nimport { setAlert } from \"../../redux/actions/shared\";\r\n\r\nconst Signup = (props) => {\r\n  const { loading, signupForm, alert } = props; // get state from props\r\n  const { startLoading, closeSignup, newAlert, signupUser } = props; // get dispatch actions from props\r\n\r\n  // internal state\r\n  const [newUser, setNewUser] = useState({\r\n    first_name: \"\",\r\n    last_name: \"\",\r\n    username: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirm_password: \"\",\r\n  });\r\n\r\n  //############### destructuring code ###################//\r\n  const { first_name, last_name, username, email, password, confirm_password } =\r\n    newUser;\r\n  const { error, fillFields } = globals;\r\n\r\n  //#################end of destructuring ###########//\r\n\r\n  const resetForm = () => {\r\n    resetFormValues(newUser);\r\n  };\r\n\r\n  const closeSignupForm = () => {\r\n    closeSignup();\r\n    resetForm();\r\n  };\r\n\r\n  const handleSignup = (e) => {\r\n    e.preventDefault();\r\n    if (ifEmpty(newUser)) {\r\n      return newAlert(error, fillFields);\r\n    }\r\n    // confirm passwords match\r\n    if (password !== confirm_password) {\r\n      return newAlert(error, \"Passwords should match\");\r\n    }\r\n\r\n    // dispatch the loading action\r\n    startLoading();\r\n\r\n    // call the signup action creator\r\n    signupUser(newUser, resetForm);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setNewUser({ ...newUser, [e.target.name]: e.target.value });\r\n  };\r\n  return (\r\n    <MediumDialog isOpen={signupForm} maxWidth=\"800px\">\r\n      <form className=\"dialog\" id={loading ? \"formSubmitting\" : \"\"}>\r\n        <h3>Create new account</h3>\r\n        <p className={`response__message ${alert.alertType}`}>\r\n          {alert.status && alert.detail}\r\n        </p>\r\n        <div className=\"dialog__row\">\r\n          <span>\r\n            <label htmlFor=\"\">First Name</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"first_name\"\r\n              value={first_name}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </span>\r\n          <span>\r\n            <label htmlFor=\"\">Last Name</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"last_name\"\r\n              value={last_name}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </span>\r\n        </div>\r\n        {loading && (\r\n          <CircularProgress\r\n            style={{ position: \"absolute\", marginLeft: \"43%\" }}\r\n          />\r\n        )}\r\n        <div className=\"dialog__row\">\r\n          <span>\r\n            <label htmlFor=\"\">Username</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"username\"\r\n              value={username}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </span>\r\n          <span>\r\n            <label htmlFor=\"\">Email</label>\r\n            <input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              username={email}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </span>\r\n        </div>\r\n\r\n        <div className=\"dialog__row\">\r\n          <span>\r\n            <label htmlFor=\"\" className=\"label__left\">\r\n              Password\r\n            </label>\r\n            <input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              value={password}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </span>\r\n          <span>\r\n            <label htmlFor=\"\">Confirm Password</label>\r\n            <input\r\n              type=\"password\"\r\n              name=\"confirm_password\"\r\n              value={confirm_password}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </span>\r\n        </div>\r\n        <div className=\"form__Buttons\">\r\n          <button type=\"button\" onClick={closeSignupForm}>\r\n            Close\r\n          </button>\r\n          <button type=\"submit\" onClick={handleSignup}>\r\n            Sign Up\r\n          </button>\r\n        </div>\r\n        <div className=\"extra__formButtons\"></div>\r\n      </form>\r\n    </MediumDialog>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    signupForm: state.auth.signupForm,\r\n    alert: state.shared?.alert,\r\n    loading: state.shared?.loading,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    startLoading: () => dispatch({ type: START_LOADING }),\r\n    closeSignup: () => dispatch({ type: CLOSE_SIGNUP }),\r\n    newAlert: (type, detail) => dispatch(setAlert(type, detail)),\r\n    signupUser: (newUser, resetForm) =>\r\n      dispatch(signup_user(newUser, resetForm)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Signup);\r\n","// import installed packages\r\nimport { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n// import styles\r\n\r\n// import material ui items\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\n// import shared/global items\r\nimport globals from \"../../shared/globals\";\r\n\r\n// import components/pages\r\nimport MinDialog from \"../common/MinDialog\";\r\n\r\n// import redux API\r\nimport {\r\n  CLOSE_FORGOT_PASSWORD,\r\n  START_LOADING,\r\n} from \"../../redux/actions/types\";\r\nimport { setAlert } from \"../../redux/actions/shared\";\r\nimport { reset_password } from \"../../redux/actions/auth\";\r\n\r\nconst ForgotPassword = (props) => {\r\n  const { loading, alert, forgotPasswordForm } = props; // extract state from props\r\n  const { startLoading, newAlert, resetPassword, closeForgotPassword } = props; // extract dispatch actions from props\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n\r\n  //############### destructuring code ###################//\r\n  const { error } = globals;\r\n\r\n  //#################end of destructuring ###########//\r\n\r\n  const resetForm = () => {\r\n    setEmail(\"\");\r\n  };\r\n\r\n  const closeForgotPasswordForm = () => {\r\n    closeForgotPassword();\r\n    resetForm();\r\n  };\r\n\r\n  // function to reset password (send reset password email)\r\n\r\n  const sendPasswordResetEmail = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (email.trim() === \"\") {\r\n      return newAlert(error, \"Email required\");\r\n    }\r\n    startLoading();\r\n    // call the signup action creator\r\n    resetPassword(email, resetForm);\r\n  };\r\n\r\n  return (\r\n    <MinDialog isOpen={forgotPasswordForm} maxWidth=\"500px\">\r\n      <form className=\"dialog\" id={loading ? \"formSubmitting\" : \"\"}>\r\n        <h3>Enter your email to reset password</h3>\r\n        <p className={`response__message ${alert.alertType}`}>\r\n          {alert.status && alert.detail}\r\n        </p>\r\n        {loading && (\r\n          <CircularProgress\r\n            style={{ position: \"absolute\", marginLeft: \"40%\" }}\r\n          />\r\n        )}\r\n        <div className=\"dialog__rowSingleItem\">\r\n          <label htmlFor=\"\">Email</label>\r\n          <input\r\n            type=\"email\"\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            value={email}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form__Buttons\">\r\n          <button type=\"button\" onClick={closeForgotPasswordForm}>\r\n            Close\r\n          </button>\r\n          <button type=\"submit\" onClick={sendPasswordResetEmail}>\r\n            Reset\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </MinDialog>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    loading: state.shared?.loading,\r\n    alert: state.shared?.alert,\r\n    forgotPasswordForm: state.auth?.forgotPasswordForm,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    startLoading: () => dispatch({ type: START_LOADING }),\r\n    newAlert: (type, detail) => dispatch(setAlert(type, detail)),\r\n    resetPassword: (email, resetForm) =>\r\n      dispatch(reset_password(email, resetForm)),\r\n    closeForgotPassword: () => dispatch({ type: CLOSE_FORGOT_PASSWORD }),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ForgotPassword);\r\n","// import installed packages\r\nimport { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n// import styles\r\n\r\n// import material ui items\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n// import shared/global items\r\nimport globals from \"../../shared/globals\";\r\n// import components/pages\r\nimport MinDialog from \"../common/MinDialog\";\r\n\r\n// import redux API\r\n\r\nimport {\r\n  CLOSE_RESEND_ACTIVATION,\r\n  START_LOADING,\r\n} from \"../../redux/actions/types\";\r\nimport { resend_activation } from \"../../redux/actions/auth\";\r\nimport { setAlert } from \"../../redux/actions/shared\";\r\n\r\nconst ReactivateAccount = (props) => {\r\n  const { loading, alert, resendActivationForm } = props; // extract state from props\r\n  const { startLoading, newAlert, closeResendActivation, resendActivation } =\r\n    props; // extract dispatch actions from props\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n\r\n  // ###################### destructuring to make code organized ######################### //\r\n  const { error } = globals;\r\n  // ###################### end destructuring to make code organized ######################### //\r\n\r\n  const resetForm = () => {\r\n    setEmail(\"\");\r\n  };\r\n\r\n  const closeResendActivationForm = () => {\r\n    closeResendActivation();\r\n    resetForm();\r\n  };\r\n\r\n  // function to resend confirmation link\r\n  const resendAccountConfirmationLink = (e) => {\r\n    e.preventDefault();\r\n    if (email.trim() === \"\") {\r\n      return newAlert(error, \"Email required\");\r\n    }\r\n    startLoading();\r\n    // call the signup action creator\r\n    resendActivation(email, resetForm);\r\n  };\r\n\r\n  return (\r\n    <MinDialog\r\n      isOpen={resendActivationForm} // since the styles of min width applied globally is affecting the reactivate form width, apply inline styles\r\n      maxWidth=\"500px\"\r\n    >\r\n      <form className=\"dialog\" id={loading ? \"formSubmitting\" : \"\"}>\r\n        <h3>Enter email to resend confirmation link</h3>\r\n        <p className={`response__message ${alert.alertType}`}>\r\n          {alert.status && alert.detail}\r\n        </p>\r\n        {loading && (\r\n          <CircularProgress\r\n            style={{ position: \"absolute\", marginLeft: \"40%\" }}\r\n          />\r\n        )}\r\n        <div className=\"dialog__rowSingleItem\">\r\n          <label htmlFor=\"\">Email</label>\r\n          <input\r\n            type=\"email\"\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            value={email}\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form__Buttons\">\r\n          <button type=\"button\" onClick={closeResendActivationForm}>\r\n            Close\r\n          </button>\r\n          <button type=\"submit\" onClick={resendAccountConfirmationLink}>\r\n            Send\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </MinDialog>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    loading: state.shared?.loading,\r\n    alert: state.shared?.alert,\r\n    resendActivationForm: state.auth?.resendActivationForm,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    startLoading: () => dispatch({ type: START_LOADING }),\r\n    newAlert: (type, detail) => dispatch(setAlert(type, detail)),\r\n    closeResendActivation: () => dispatch({ type: CLOSE_RESEND_ACTIVATION }),\r\n    resendActivation: (email, resetForm) =>\r\n      dispatch(resend_activation(email, resetForm)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ReactivateAccount);\r\n","// import installed packages\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\r\n// import styles\r\n\r\nimport \"../../styles/components/common/Header.css\";\r\n// import material ui items\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\n// import shared/global items\r\nimport { showNavbar } from \"../../shared/scripts\";\r\n// import components/pages\r\nimport Login from \"../users/Login\";\r\nimport Signup from \"../users/Signup\";\r\nimport ForgotPassword from \"../users/ForgotPassword\";\r\nimport ReactivateAccount from \"../users/ReactivateAccount\";\r\n\r\n// import redux API\r\nimport { OPEN_LOGIN, OPEN_SIGNUP } from \"../../redux/actions/types\";\r\nimport { logout } from \"../../redux/actions/auth\";\r\n\r\nconst Header = () => {\r\n  const dispatch = useDispatch();\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n  const session_cookie = localStorage.getItem(\"session_cookie\");\r\n  const username = useSelector((state) => state.auth.user?.username);\r\n  const userImage = useSelector((state) => state.auth?.userImage);\r\n\r\n  // console.log(location.pathname);\r\n\r\n  return (\r\n    <>\r\n      <header className=\"header\" id=\"header\">\r\n        <div className=\"header__toggle\">\r\n          <i className=\"bx bx-menu\" id=\"header-toggle\" onClick={showNavbar}></i>\r\n          <h1>CourZe Hub Work</h1>\r\n        </div>\r\n\r\n        {session_cookie ? (\r\n          <div className=\"header__right authenticated\">\r\n            <>\r\n              <div>\r\n                <Avatar alt={username} src={userImage} className=\"user__image\">\r\n                  {username?.charAt(0)}\r\n                </Avatar>\r\n                <h6>{username}</h6>\r\n                <i className=\"bx bx-caret-down\"></i>\r\n              </div>\r\n              <ul className=\"dropdown\">\r\n                <li>\r\n                  <Link to=\"/dashboard/\">Dashboard</Link>\r\n                </li>\r\n                <li onClick={() => dispatch(logout(history))}>Logout</li>\r\n              </ul>\r\n            </>\r\n          </div>\r\n        ) : (\r\n          <div className=\"header__right\">\r\n            <span\r\n              className=\"button\"\r\n              onClick={() => dispatch({ type: OPEN_LOGIN })}\r\n            >\r\n              Login\r\n            </span>\r\n            <span\r\n              className=\"button\"\r\n              onClick={() => dispatch({ type: OPEN_SIGNUP })}\r\n            >\r\n              Signup\r\n            </span>\r\n          </div>\r\n        )}\r\n      </header>\r\n      {/* components */}\r\n      <Login />\r\n      <Signup />\r\n      <ForgotPassword />\r\n      <ReactivateAccount />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","// import installed packages\r\nimport { connect, useDispatch } from \"react-redux\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n// import styles\r\nimport \"./Home.css\";\r\n// import material ui items\r\n// import shared/global items\r\n// import components/pages\r\n// import redux API\r\nimport { OPEN_LOGIN } from \"../../redux/actions/types\";\r\n\r\nconst Home = (props) => {\r\n  const { userId, profile_type } = props;\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  const workerStartNow = () => {\r\n    if (userId) {\r\n      if (profile_type === \"Worker\") {\r\n        history.push(`/worker/work-center/`);\r\n      } else {\r\n        history.push(\"/profile\");\r\n      }\r\n    } else {\r\n      dispatch({ type: OPEN_LOGIN });\r\n    }\r\n  };\r\n\r\n  const companyGetStarted = () => {\r\n    if (userId) {\r\n      if (profile_type === \"Organization Admin\") {\r\n        history.push(`/organization-admin/maintain-tasks/`);\r\n      } else {\r\n        history.push(\"/profile\");\r\n      }\r\n    } else {\r\n      dispatch({ type: OPEN_LOGIN });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"home\">\r\n      <div className=\"home__left\">\r\n        {(profile_type === \"Worker\" || !profile_type) && (\r\n          <>\r\n            <h3>Earn by using your skills.</h3>\r\n            <button\r\n              type=\"button\"\r\n              className=\"add__button\"\r\n              onClick={workerStartNow}\r\n            >\r\n              Start Now\r\n            </button>\r\n          </>\r\n        )}\r\n      </div>\r\n      <div className=\"home__right\">\r\n        {(profile_type === \"Organization Admin\" || !profile_type) && (\r\n          <>\r\n            <h3>Tap into remote talent.</h3>\r\n            <button\r\n              type=\"button\"\r\n              className=\"add__button\"\r\n              onClick={companyGetStarted}\r\n            >\r\n              Get Started\r\n            </button>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userId: state.auth.user?.id,\r\n    profile_type: state.auth.user?.profile_type,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\r\n","// import installed packages\r\n// import styles\r\n\r\n// import material ui items\r\n\r\n// import shared/global items\r\n\r\n// import components/pages\r\n\r\n// import redux API\r\n\r\nconst SysAdminLinks = ({ Link, pathname }) => {\r\n  return (\r\n    <>\r\n      <Link\r\n        to=\"/sys-admin/maintain-organizations/\"\r\n        className={\r\n          `${pathname}` === \"/sys-admin/maintain-organizations/\"\r\n            ? \"nav__link active\"\r\n            : \"nav__link\"\r\n        }\r\n      >\r\n        <i className=\"bx bxs-school\"></i>\r\n        <span className=\"nav__name\">Organizations</span>\r\n      </Link>\r\n      <Link\r\n        to=\"/sys-admin/maintain-workers/\"\r\n        className={\r\n          `${pathname}` === \"/sys-admin/maintain-workers/\"\r\n            ? \"nav__link active\"\r\n            : \"nav__link\"\r\n        }\r\n      >\r\n        <i className=\"fa fa-users\" aria-hidden=\"true\"></i>\r\n        <span className=\"nav__name\">Workers</span>\r\n      </Link>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SysAdminLinks;\r\n","// import installed packages\r\n// import styles\r\n\r\n// import material ui items\r\n\r\n// import shared/global items\r\n\r\n// import components/pages\r\n\r\n// import redux API\r\n\r\nconst OrganizationAdminLinks = ({ Link, pathname }) => {\r\n  return (\r\n    <>\r\n      <Link\r\n        to=\"/organization-admin/maintain-tasks/\"\r\n        className={\r\n          `${pathname}` === \"/organization-admin/maintain-tasks/\"\r\n            ? \"nav__link active\"\r\n            : \"nav__link\"\r\n        }\r\n      >\r\n        <i className=\"fa fa-briefcase\" aria-hidden=\"true\"></i>\r\n        <span className=\"nav__name\">Tasks</span>\r\n      </Link>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OrganizationAdminLinks;\r\n","// import installed packages\r\n// import styles\r\n// import material ui items\r\n// import shared/global items\r\n// import components/pages\r\n// import redux API\r\n\r\nconst WorkerLinks = ({ Link, pathname }) => {\r\n  return (\r\n    <>\r\n      <Link\r\n        to=\"/worker/work-center/\"\r\n        className={\r\n          `${pathname}` === \"/worker/work-center/\"\r\n            ? \"nav__link active\"\r\n            : \"nav__link\"\r\n        }\r\n      >\r\n        <i className=\"fa fa-briefcase\" aria-hidden=\"true\"></i>\r\n        <span className=\"nav__name\">Work Center</span>\r\n      </Link>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default WorkerLinks;\r\n","// import installed packages\r\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\n// import styles\r\nimport \"./Sidebar.css\";\r\n// import material ui items\r\n\r\n// import shared/global items\r\n\r\n// import components/pages\r\nimport SysAdminLinks from \"../Links/SysAdminLinks\";\r\n// import redux API\r\nimport { logout } from \"../../../redux/actions/auth\";\r\nimport OrganizationAdminLinks from \"../Links/OrganizationAdminLinks\";\r\nimport WorkerLinks from \"../Links/WorkerLinks\";\r\n\r\nconst Sidebar = (props) => {\r\n  const history = useHistory();\r\n  const { pathname } = useLocation();\r\n  const { loggedIn, profile_type } = props;\r\n  const { logoutUser } = props;\r\n\r\n  return (\r\n    <div className=\"left-navbar\" id=\"nav-bar\">\r\n      <nav className=\"nav\">\r\n        <Link to=\"\" className=\"nav__logo\">\r\n          <i className=\"bx bx-layer nav__logo-icon\"></i>\r\n          <span className=\"nav__logo-name\">AZW</span>\r\n        </Link>\r\n        <div className=\"nav__list\">\r\n          {/* unprotected links */}\r\n          <>\r\n            <Link\r\n              to=\"/\"\r\n              className={\r\n                `${pathname}` === \"/\" ? \"nav__link active\" : \"nav__link\"\r\n              }\r\n            >\r\n              <i class=\"bx bx-home\"></i>\r\n              <span className=\"nav__name\">Home</span>\r\n            </Link>\r\n          </>\r\n          {/* protected links */}\r\n          {loggedIn && (\r\n            <>\r\n              {/* LINKS FOR THE SYSTEM ADMIN */}\r\n              {profile_type === \"System Admin\" && (\r\n                <SysAdminLinks Link={Link} pathname={pathname} />\r\n              )}\r\n\r\n              {/* LINKS FOR THE ORGANIZATION ADMINS */}\r\n              {profile_type === \"Organization Admin\" && (\r\n                <OrganizationAdminLinks Link={Link} pathname={pathname} />\r\n              )}\r\n              {/* LINKS FOR WORKER */}\r\n              {profile_type === \"Worker\" && (\r\n                <WorkerLinks Link={Link} pathname={pathname} />\r\n              )}\r\n              <Link\r\n                to=\"/dashboard/\"\r\n                className={\r\n                  `${pathname}` === \"/dashboard/\"\r\n                    ? \"nav__link active\"\r\n                    : \"nav__link\"\r\n                }\r\n              >\r\n                <i className=\"bx bx-grid-alt nav__icon\"></i>\r\n                <span className=\"nav__name\">Dashboard</span>\r\n              </Link>\r\n              <Link\r\n                to=\"/profile/\"\r\n                className={\r\n                  `${pathname}` === \"/profile/\"\r\n                    ? \"nav__link active\"\r\n                    : \"nav__link\"\r\n                }\r\n              >\r\n                <i class=\"bx bx-user nav__icon\"></i>\r\n                <span className=\"nav__name\">Profile</span>\r\n              </Link>\r\n              <Link\r\n                to=\"\"\r\n                className=\"nav__link\"\r\n                onClick={() => logoutUser(history)}\r\n              >\r\n                <i className=\"bx bx-log-out-circle\"></i>\r\n                <span className=\"nav__name\">Logout</span>\r\n              </Link>\r\n            </>\r\n          )}\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    loggedIn: state.auth?.loggedIn,\r\n    profile_type: state.auth?.user?.profile_type,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    logoutUser: (history) => dispatch(logout(history)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Sidebar);\r\n","import React from \"react\";\r\n\r\n// styles\r\nimport \"../styles/pages/Dashboard.css\";\r\n\r\nconst Dashboard = () => {\r\n  return (\r\n    <div>\r\n      <h1>Dashboard</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","// import installed packages\r\nimport { connect } from \"react-redux\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\n// import styles\r\nimport \"../styles/pages/ActivateAccount.css\";\r\n// import material ui items\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { activate_account } from \"../redux/actions/auth\";\r\n\r\n// import shared/global items\r\n\r\n// import components/pages\r\n\r\n// import redux API\r\nimport { START_LOADING } from \"../redux/actions/types\";\r\n\r\nconst ActivateAccount = (props) => {\r\n  const { activation_token } = useParams();\r\n  const history = useHistory();\r\n  const { loading } = props; //get state from props\r\n  const { startLoading, activateUser } = props; //get dispatch actions from props\r\n\r\n  const handleActivate = () => {\r\n    // dispatch the loading action\r\n    startLoading();\r\n    activateUser(activation_token, history);\r\n  };\r\n\r\n  return (\r\n    <div className=\"activate__account\" id={loading ? \"formSubmitting\" : \"\"}>\r\n      <h1>Click on the button below to verify your account</h1>\r\n      {loading && (\r\n        <CircularProgress style={{ position: \"absolute\", marginLeft: \"1%\" }} />\r\n      )}\r\n      <button type=\"button\" onClick={handleActivate}>\r\n        Verify\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    loading: state.shared?.loading,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    startLoading: () => dispatch({ type: START_LOADING }),\r\n    activateUser: (activation_token, history) =>\r\n      dispatch(activate_account({ activation_token, history })),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ActivateAccount);\r\n","// import installed packages\r\nimport { useRef, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\n// import styles\r\nimport \"../styles/pages/ActivateAccount.css\";\r\n// import material ui items\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n// import shared/global items\r\nimport globals from \"../shared/globals\";\r\nimport { ifEmpty, resetFormValues } from \"../shared/sharedFunctions\";\r\n\r\n// import components/pages\r\nimport MinDialog from \"../components/common/MinDialog\";\r\n\r\n// import redux API\r\nimport {\r\n  CLOSE_PASSWORD_RESET_CONFIRM,\r\n  OPEN_PASSWORD_RESET_CONFIRM,\r\n  START_LOADING,\r\n} from \"../redux/actions/types\";\r\nimport { setAlert } from \"../redux/actions/shared\";\r\nimport { set_password } from \"../redux/actions/auth\";\r\n\r\nconst ResetPasswordConfirm = (props) => {\r\n  const history = useHistory();\r\n  const { password_token } = useParams();\r\n  const { loading, alert, resetPasswordConfirmForm } = props; // extract state from props\r\n  const {\r\n    startLoading,\r\n    setNewPassword,\r\n    newAlert,\r\n    openNewPassword,\r\n    closeNewPassword,\r\n  } = props; // extract dispatch actions from props\r\n  const [newPasswords, setNewPasswords] = useState({\r\n    new_password: \"\",\r\n    confirm_password: \"\",\r\n  });\r\n\r\n  // destructure values for better code formatting\r\n  // ########### start of destructuring #################  //\r\n  const { new_password, confirm_password } = newPasswords;\r\n  const { error } = globals;\r\n\r\n  // ########### end of destructuring #################  //\r\n\r\n  const resetForm = () => {\r\n    resetFormValues(newPasswords);\r\n  };\r\n\r\n  const closeNewPasswordForm = () => {\r\n    resetForm();\r\n    closeNewPassword();\r\n  };\r\n\r\n  // handle change\r\n  const handleChange = (e) =>\r\n    setNewPasswords({ ...newPasswords, [e.target.name]: e.target.value });\r\n\r\n  // function to submit new password\r\n  const handleSetNewPassword = (e) => {\r\n    e.preventDefault();\r\n    if (ifEmpty(newPasswords)) {\r\n      return newAlert(error, \"Both fields are required\");\r\n    }\r\n    startLoading();\r\n\r\n    // call the signup action creator\r\n    setNewPassword(newPasswords, password_token, history);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"activate__account\">\r\n        <h1>Click the button to set new password</h1>\r\n        <button type=\"button\" onClick={openNewPassword}>\r\n          Set New password\r\n        </button>\r\n      </div>\r\n      <MinDialog isOpen={resetPasswordConfirmForm}>\r\n        <form className=\"dialog\" id={loading ? \"formSubmitting\" : \"\"}>\r\n          <h3>Enter new password</h3>\r\n          <p className={`response__message ${alert.alertType}`}>\r\n            {alert.status && alert.detail}\r\n          </p>\r\n          <div className=\"dialog__rowSingleItem\">\r\n            <label htmlFor=\"\">New Password</label>\r\n            <input\r\n              type=\"password\"\r\n              name=\"new_password\"\r\n              onChange={handleChange}\r\n              value={new_password}\r\n            />\r\n          </div>\r\n          {loading && (\r\n            <CircularProgress\r\n              style={{ position: \"absolute\", marginLeft: \"43%\" }}\r\n            />\r\n          )}\r\n          <div className=\"dialog__rowSingleItem\">\r\n            <label htmlFor=\"\">Confirm New Password</label>\r\n            <input\r\n              type=\"password\"\r\n              name=\"confirm_password\"\r\n              onChange={handleChange}\r\n              value={confirm_password}\r\n            />\r\n          </div>\r\n          <div className=\"form__Buttons\">\r\n            <button type=\"button\" onClick={closeNewPasswordForm}>\r\n              Close\r\n            </button>\r\n            <button type=\"submit\" onClick={handleSetNewPassword}>\r\n              Submit\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </MinDialog>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    loading: state.shared?.loading,\r\n    resetPasswordConfirmForm: state.auth?.resetPasswordConfirmForm,\r\n    alert: state.shared?.alert,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    startLoading: () => dispatch({ type: START_LOADING }),\r\n    setNewPassword: (newPasswords, password_token, history) =>\r\n      dispatch(set_password(newPasswords, password_token, history)),\r\n    openNewPassword: () => dispatch({ type: OPEN_PASSWORD_RESET_CONFIRM }),\r\n    closeNewPassword: () => dispatch({ type: CLOSE_PASSWORD_RESET_CONFIRM }),\r\n    newAlert: (type, detail) => dispatch(setAlert(type, detail)),\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ResetPasswordConfirm);\r\n","// styles\r\nimport \"../styles/pages/NotFound.css\";\r\n\r\nfunction NotFound() {\r\n  return (\r\n    <div className=\"not__found\">\r\n      <h1 className=\"not__foundHeading\">404 resource not found</h1>\r\n      <p>Please try again.</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NotFound;\r\n","// import installed packages\r\nimport { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\n// import styles\r\n\r\n// import material ui items\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n// import shared/global items\r\nimport { ifEmpty, resetFormValues } from \"../../shared/sharedFunctions\";\r\nimport globals from \"../../shared/globals\";\r\n// import components/pages\r\nimport MinDialog from \"../common/MinDialog\";\r\n\r\n// import redux API\r\nimport {\r\n  CLOSE_CHANGE_PASSWORD,\r\n  START_LOADING,\r\n} from \"../../redux/actions/types\";\r\nimport { setAlert } from \"../../redux/actions/shared\";\r\nimport { change_password } from \"../../redux/actions/auth\";\r\n\r\nconst ChangePassword = (props) => {\r\n  const history = useHistory();\r\n  const { loading, alert, changePasswordForm, userId } = props; // extract state from props\r\n  const {\r\n    startLoading,\r\n    newAlert,\r\n    changeUserPassword,\r\n    closeChangePassword,\r\n  } = props; // extract dispatch actions from props\r\n\r\n  // internal state\r\n  const [passwords, setPasswords] = useState({\r\n    current_password: \"\",\r\n    new_password: \"\",\r\n    confirm_new_password: \"\",\r\n  });\r\n\r\n  //############### destructuring code ###################//\r\n  const { current_password, new_password, confirm_new_password } = passwords;\r\n  const { error } = globals;\r\n  //#################end of destructuring ###########//\r\n\r\n  const resetForm = () => {\r\n    resetFormValues(passwords);\r\n  };\r\n\r\n  const closeChangePasswordForm = () => {\r\n    resetForm();\r\n    closeChangePassword();\r\n  };\r\n\r\n  // handle change function\r\n  const handleChange = (e) => {\r\n    setPasswords({ ...passwords, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  // function to handle password change\r\n  const handlePasswordChange = (e) => {\r\n    e.preventDefault();\r\n    if (ifEmpty(passwords)) {\r\n      return newAlert(error, \"All fields are required\");\r\n    }\r\n    startLoading();\r\n    // call the signup action creator\r\n    changeUserPassword(passwords, userId, history, resetForm);\r\n  };\r\n  return (\r\n    <MinDialog isOpen={changePasswordForm}>\r\n      <form className=\"dialog\" id={loading ? \"formSubmitting\" : \"\"}>\r\n        <h3>Change your password here</h3>\r\n        <p className={`response__message ${alert?.alertType}`}>\r\n          {alert?.status && alert?.detail}\r\n        </p>\r\n        <div className=\"dialog__rowSingleItem\">\r\n          <label htmlFor=\"\">Old Password</label>\r\n          <input\r\n            type=\"password\"\r\n            name=\"current_password\"\r\n            value={current_password}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        {loading && (\r\n          <CircularProgress\r\n            style={{ position: \"absolute\", marginLeft: \"40%\" }}\r\n          />\r\n        )}\r\n        <div className=\"dialog__rowSingleItem\">\r\n          <label htmlFor=\"\">New Password</label>\r\n          <input\r\n            type=\"password\"\r\n            name=\"new_password\"\r\n            value={new_password}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"dialog__rowSingleItem\">\r\n          <label htmlFor=\"\">Confirm New Password</label>\r\n          <input\r\n            type=\"password\"\r\n            name=\"confirm_new_password\"\r\n            value={confirm_new_password}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"form__Buttons\">\r\n          <button type=\"button\" onClick={closeChangePasswordForm}>\r\n            Close\r\n          </button>\r\n          <button type=\"submit\" onClick={handlePasswordChange}>\r\n            Submit\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </MinDialog>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    loading: state.shared?.loading,\r\n    alert: state.shared?.alert,\r\n    changePasswordForm: state.auth?.changePasswordForm,\r\n    userId: state.auth.user?.id,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    startLoading: () => dispatch({ type: START_LOADING }),\r\n    changeUserPassword: (passwords, userId, history, resetForm) =>\r\n      dispatch(change_password(passwords, userId, history, resetForm)),\r\n    closeChangePassword: () => dispatch({ type: CLOSE_CHANGE_PASSWORD }),\r\n    newAlert: (type, detail) => dispatch(setAlert(type, detail)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ChangePassword);\r\n","import \"./Toolbar.css\";\r\n\r\n// alternative to exec\r\n//github.com/basecamp/trix\r\n\r\nconst Toolbar = () => {\r\n  function format(com, val) {\r\n    document.execCommand(com, false, val);\r\n  }\r\n\r\n  return (\r\n    <div id=\"toolbar\">\r\n      {/* bold text */}\r\n\r\n      <button onClick={(e) => format(\"bold\")} type=\"button\">\r\n        <i class=\"fa fa-bold\"></i>\r\n      </button>\r\n      {/* italic text */}\r\n      <button onClick={(e) => format(\"italic\")} type=\"button\">\r\n        <i class=\"fa fa-italic\"></i>\r\n      </button>\r\n      {/* unordered list */}\r\n      <button onClick={(e) => format(\"insertUnorderedList\")} type=\"button\">\r\n        <i class=\"fa fa-list-ul\"></i>\r\n      </button>\r\n      {/* ordered list */}\r\n      <button onClick={(e) => format(\"insertOrderedList\")} type=\"button\">\r\n        <i class=\"fa fa-list-ol\"></i>\r\n      </button>\r\n      {/* underline text */}\r\n      <button onClick={(e) => format(\"underline\")} type=\"button\">\r\n        <i class=\"fa fa-underline\"></i>\r\n      </button>\r\n      {/* subscript */}\r\n      <button onClick={(e) => format(\"subscript\")} type=\"button\">\r\n        <i class=\"fa fa-subscript\"></i>\r\n      </button>\r\n      {/* superscript */}\r\n      <button onClick={(e) => format(\"superscript\")} type=\"button\">\r\n        <i class=\"fa fa-superscript\"></i>\r\n      </button>\r\n      {/* outdent / indent left */}\r\n      <button onClick={(e) => format(\"outdent\")} type=\"button\">\r\n        <i class=\"fa fa-outdent\"></i>\r\n      </button>\r\n      {/* indent right */}\r\n      <button onClick={(e) => format(\"indent\")} type=\"button\">\r\n        <i class=\"fa fa-indent\"></i>\r\n      </button>\r\n\r\n      {/* align full */}\r\n      <button onClick={(e) => format(\"justifyFull\")} type=\"button\">\r\n        <i class=\"fa fa-align-justify\"></i>\r\n      </button>\r\n      {/* align left */}\r\n      <button onClick={(e) => format(\"justifyLeft\")} type=\"button\">\r\n        <i class=\"fa fa-align-left\"></i>\r\n      </button>\r\n      {/* align center */}\r\n      <button onClick={(e) => format(\"justifyCenter\")} type=\"button\">\r\n        <i class=\"fa fa-align-center\"></i>\r\n      </button>\r\n      {/* align right */}\r\n      <button onClick={(e) => format(\"justifyRight\")} type=\"button\">\r\n        <i class=\"fa fa-align-right\"></i>\r\n      </button>\r\n\r\n      {/* undo */}\r\n      <button onClick={(e) => format(\"undo\")} type=\"button\">\r\n        <i class=\"fa fa-undo\"></i>\r\n      </button>\r\n      {/* redo */}\r\n      <button onClick={(e) => format(\"redo\")} type=\"button\">\r\n        <i class=\"fa fa-repeat\"></i>\r\n      </button>\r\n      {/* strike through */}\r\n      <button onClick={(e) => format(\"strikethrough\")} type=\"button\">\r\n        <i class=\"fa fa-strikethrough\"></i>\r\n      </button>\r\n      <button onClick={() => format(\"selectAll\")} type=\"button\">\r\n        All\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Toolbar;\r\n","import ContentEditable from \"react-contenteditable\";\r\n\r\nimport Toolbar from \"./Toolbar\";\r\n\r\n// styles\r\nimport \"./Markdown.css\";\r\n\r\nconst Markdown = ({ content, setContent }) => {\r\n  // there is no need to maintain state as we can just access the data through getting the element and then the innerHTML\r\n  // in addition, onChange events as well as blur events as causing a problem with operation\r\n  // const handleSubmit = () => {\r\n  // const content = document.getElementById(\"editorContent\").innerHTML;\r\n  // console.log(content);\r\n  // };\r\n  return (\r\n    <div className=\"editor\">\r\n      <div className=\"editor__buttons\">\r\n        <Toolbar />\r\n      </div>\r\n      <div className=\"editor__edit\">\r\n        {/* we use a div to allow html because a textarea does not support html */}\r\n        <ContentEditable\r\n          id=\"editorContent\"\r\n          onChange={(e) => setContent(e.target.value)}\r\n          html={content}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Markdown;\r\n","import * as api from \"../../api\";\r\nimport * as actionTypes from \"./types\";\r\n\r\nimport { showError, stopLoading } from \"./shared\";\r\n\r\nexport const add_organization =\r\n  (userId, body, resetForm) => async (dispatch) => {\r\n    await api\r\n      .addOrganization(userId, body)\r\n      .then((res) => {\r\n        resetForm();\r\n        window.alert(res.data?.detail);\r\n        dispatch({\r\n          type: actionTypes.ADD_ORGANIZATION,\r\n          payload: res.data?.organization_data,\r\n        });\r\n      })\r\n      .catch((err) => showError(err))\r\n      .finally(() => stopLoading(dispatch));\r\n  };\r\n\r\n// action to get organizations\r\nexport const get_organizations = (userId) => async (dispatch) => {\r\n  await api\r\n    .getOrganizations(userId)\r\n    .then((res) => {\r\n      dispatch({\r\n        type: actionTypes?.GET_ORGANIZATIONS,\r\n        payload: res.data?.organizations_data,\r\n      });\r\n    })\r\n    .catch((err) => showError(err))\r\n    .finally(() => stopLoading(dispatch));\r\n};\r\n\r\n// sys admin action to add organization admin\r\nexport const add_or_remove_organization_admin =\r\n  (userId, body, resetForm) => async (dispatch) => {\r\n    await api\r\n      .addOrRemoveOrganizationAdmin(userId, body)\r\n      .then((res) => {\r\n        resetForm();\r\n        dispatch({\r\n          type: actionTypes.UPDATE_ORGANIZATION,\r\n          payload: res.data?.updated_organization,\r\n        });\r\n        window.alert(res.data?.detail);\r\n      })\r\n      .catch((err) => showError(err))\r\n      .finally(() => stopLoading(dispatch));\r\n  };\r\n\r\n// organization admin add task\r\nexport const new_organization_task =\r\n  (userId, body, resetForm) => async (dispatch) => {\r\n    await api\r\n      .newOrganizationTask(userId, body)\r\n      .then((res) => {\r\n        resetForm();\r\n        dispatch({\r\n          type: actionTypes.NEW_ORGANIZATION_TASK,\r\n          payload: res.data?.new_task,\r\n        });\r\n        window.alert(res.data?.detail);\r\n      })\r\n      .catch((err) => showError(err))\r\n      .finally(() => stopLoading(dispatch));\r\n  };\r\n\r\n// organization admin get all tasks\r\nexport const get_all_tasks = (userId) => async (dispatch) => {\r\n  await api\r\n    .getAllTasks(userId)\r\n    .then((res) => {\r\n      dispatch({ type: actionTypes.GET_TASKS, payload: res.data?.tasks_data });\r\n    })\r\n    .catch((err) => showError(err))\r\n    .finally(() => stopLoading(dispatch));\r\n};\r\n\r\n// organization admin edit task\r\nexport const edit_organization_task = (userId, body) => async (dispatch) => {\r\n  await api\r\n    .editOrganizationTask(userId, body)\r\n    .then((res) => {\r\n      dispatch({\r\n        type: actionTypes.EDIT_ORGANIZATION_TASK,\r\n        payload: res.data?.updated_task,\r\n      });\r\n      window.alert(res.data?.detail);\r\n    })\r\n    .catch((err) => showError(err))\r\n    .finally(() => stopLoading(dispatch));\r\n};\r\n\r\n// POST worker application apply action\r\nexport const worker_application = (userId, body) => async (dispatch) => {\r\n  await api\r\n    .workerApplication(userId, body)\r\n    .then((res) => {\r\n      window.alert(res.data?.detail);\r\n    })\r\n    .catch((err) => showError(err))\r\n    .finally(() => stopLoading(dispatch));\r\n};\r\n\r\n// get worker application action#\r\nexport const get_workers = (userId) => async (dispatch) => {\r\n  await api\r\n    .getWorkers(userId)\r\n    .then((res) => {\r\n      dispatch({ type: actionTypes.GET_WORKERS, payload: res.data });\r\n    })\r\n    .catch((err) => showError(err))\r\n    .finally(() => stopLoading(dispatch));\r\n};\r\n\r\n// edit worker application\r\nexport const edit_worker_or_application =\r\n  (userId, body) => async (dispatch) => {\r\n    await api\r\n      .editWorkerOrApplication(userId, body)\r\n      .then((res) => {\r\n        dispatch({\r\n          type: actionTypes.EDIT_WORKER,\r\n          payload: res.data?.updated_application,\r\n        });\r\n        window.alert(res.data?.detail);\r\n      })\r\n      .catch((err) => showError(err))\r\n      .finally(() => stopLoading(dispatch));\r\n  };\r\n","// import installed packages\r\nimport { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n// import styles\r\n// import material ui items\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n// import shared/global items\r\nimport { ifEmpty } from \"../../../shared/sharedFunctions\";\r\n// import components/pages\r\nimport Markdown from \"../../../components/common/Markdown/Markdown\";\r\nimport MediumDialog from \"../../../components/common/MediumDialog\";\r\n// import redux API\r\nimport { START_LOADING } from \"../../../redux/actions/types\";\r\nimport { worker_application } from \"../../../redux/actions/work\";\r\n\r\nconst WorkerApplication = (props) => {\r\n  const { openWorkerApplication, loading, userId } = props;\r\n  const { setOpenWorkerApplication, startLoading, workerApplication } = props;\r\n  const [description, setDescription] = useState(\"\");\r\n  const [applicationDetails, setApplicationDetails] = useState({\r\n    mpesa_number: \"\",\r\n    national_id: \"\",\r\n    occupation: \"\",\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    setApplicationDetails({\r\n      ...applicationDetails,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpenWorkerApplication(false);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (ifEmpty(applicationDetails) || description.trim() === \"\") {\r\n      return window.alert(\"Please fill all fields\");\r\n    }\r\n    startLoading();\r\n    const body = {\r\n      ...applicationDetails,\r\n      about_worker: description,\r\n    };\r\n    workerApplication(userId, body);\r\n  };\r\n\r\n  // DESTRUCTURING\r\n  const { mpesa_number, national_id, occupation } = applicationDetails;\r\n  return (\r\n    <MediumDialog isOpen={openWorkerApplication} maxWidth=\"800px\">\r\n      <form\r\n        className=\"dialog\"\r\n        onSubmit={handleSubmit}\r\n        id={loading ? \"formSubmitting\" : \"\"}\r\n      >\r\n        <h3>Enter your details</h3>\r\n        <div className=\"dialog__row\">\r\n          <span>\r\n            <label htmlFor=\"\">National ID</label>\r\n            <input\r\n              type=\"number\"\r\n              name=\"national_id\"\r\n              value={national_id}\r\n              onChange={handleChange}\r\n            />\r\n          </span>\r\n          <span>\r\n            <label htmlFor=\"\">Mpesa Number</label>\r\n            <input\r\n              type=\"number\"\r\n              name=\"mpesa_number\"\r\n              value={mpesa_number}\r\n              onChange={handleChange}\r\n            />\r\n          </span>\r\n        </div>\r\n        <div className=\"dialog__rowSingleItem\">\r\n          <label htmlFor=\"\">Occupation</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"occupation\"\r\n            onChange={handleChange}\r\n            value={occupation}\r\n          />\r\n        </div>\r\n        {loading && (\r\n          <CircularProgress\r\n            style={{ position: \"absolute\", marginLeft: \"43%\" }}\r\n          />\r\n        )}\r\n        <div className=\"dialog__rowSingleItem\">\r\n          <label htmlFor=\"\">About yourself</label>\r\n          <Markdown content={description} setContent={setDescription} />\r\n        </div>\r\n        <div className=\"form__Buttons\">\r\n          <button type=\"button\" onClick={handleClose}>\r\n            Close\r\n          </button>\r\n          <button type=\"submit\">Submit</button>\r\n        </div>\r\n      </form>\r\n    </MediumDialog>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    loading: state.shared?.loading,\r\n    userId: state.auth.user?.id,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    startLoading: () => dispatch({ type: START_LOADING }),\r\n    workerApplication: (userId, body) =>\r\n      dispatch(worker_application(userId, body)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(WorkerApplication);\r\n","// import installed packages\r\nimport { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\n// import styles\r\nimport \"../styles/pages/Profile.css\";\r\n// import material ui items\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n// import shared/global items\r\nimport { ifEmpty } from \"../shared/sharedFunctions\";\r\n// import components/pages\r\nimport ChangePassword from \"../components/users/ChangePassword\";\r\nimport WorkerApplication from \"./worker/components/WorkerApplication\";\r\n// import redux API\r\nimport { OPEN_CHANGE_PASSWORD, START_LOADING } from \"../redux/actions/types\";\r\nimport { update_user } from \"../redux/actions/auth\";\r\n\r\nconst Profile = (props) => {\r\n  const { first_name, last_name, username, email, bio, userId, loading } =\r\n    props; // extract state from props\r\n  const { startLoading, updateUser, openChangePassword } = props; // extract dispatch actions from props\r\n  // internal state\r\n  const [updatedUser, setUpdatedUser] = useState({});\r\n  const [openWorkerApplication, setOpenWorkerApplication] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setUpdatedUser({\r\n      first_name,\r\n      last_name,\r\n      username,\r\n      email,\r\n      bio,\r\n    });\r\n  }, [first_name, last_name, email, username, bio]);\r\n\r\n  // function to update user details\r\n  const updateUserDetails = (e) => {\r\n    e.preventDefault();\r\n    if (ifEmpty(updatedUser)) {\r\n      alert(\"Fill all fields are to update your profile\");\r\n    }\r\n    startLoading();\r\n    // call the signup action creator\r\n    updateUser(updatedUser, userId);\r\n  };\r\n\r\n  // handle change function\r\n  const handleChange = (e) => {\r\n    setUpdatedUser({ ...updatedUser, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const openWorkerApplicationForm = () => {\r\n    setOpenWorkerApplication(true);\r\n  };\r\n\r\n  return (\r\n    <div className=\"profile\" id={loading ? \"formSubmitting\" : \"\"}>\r\n      <h2>Profile Details</h2>\r\n      <div className=\"profile__row\">\r\n        <span>\r\n          <label htmlFor=\"\">First Name</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"first_name\"\r\n            value={updatedUser.first_name}\r\n            onChange={handleChange}\r\n          />\r\n        </span>\r\n        <span>\r\n          <label htmlFor=\"\">Last Name</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"last_name\"\r\n            value={updatedUser.last_name}\r\n            onChange={handleChange}\r\n          />\r\n        </span>\r\n      </div>\r\n      {loading && (\r\n        <CircularProgress style={{ position: \"absolute\", marginLeft: \"30%\" }} />\r\n      )}\r\n      <div className=\"profile__row\">\r\n        <span>\r\n          <label htmlFor=\"\">Username</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"username\"\r\n            value={updatedUser.username}\r\n            onChange={handleChange}\r\n          />\r\n        </span>\r\n        <span>\r\n          <label htmlFor=\"\">Email</label>\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={updatedUser.email}\r\n            onChange={handleChange}\r\n          />\r\n        </span>\r\n      </div>\r\n\r\n      <div className=\"profile__rowSingleItem\">\r\n        <label htmlFor=\"\">Bio</label>\r\n        <textarea name=\"bio\" value={updatedUser.bio} onChange={handleChange} />\r\n      </div>\r\n      <div className=\"profile__Buttons\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"add__button\"\r\n          onClick={openWorkerApplicationForm}\r\n        >\r\n          Worker Application\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className=\"change__password\"\r\n          onClick={openChangePassword}\r\n        >\r\n          Change Password\r\n        </button>\r\n        <button type=\"submit\" className=\"update\" onClick={updateUserDetails}>\r\n          Update Profile\r\n        </button>\r\n      </div>\r\n\r\n      {/* child components */}\r\n      {OPEN_CHANGE_PASSWORD && <ChangePassword />}\r\n      {openWorkerApplication && (\r\n        <WorkerApplication\r\n          openWorkerApplication={openWorkerApplication}\r\n          setOpenWorkerApplication={setOpenWorkerApplication}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    first_name: state.auth.user?.first_name,\r\n    last_name: state.auth.user?.last_name,\r\n    username: state.auth.user?.username,\r\n    email: state.auth.user?.email,\r\n    bio: state.auth.user?.bio,\r\n    userId: state.auth.user?.id,\r\n    loading: state.shared?.loading,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    startLoading: () => dispatch({ type: START_LOADING }),\r\n    updateUser: (updatedUser, userId) =>\r\n      dispatch(update_user(updatedUser, userId)),\r\n    openChangePassword: () => dispatch({ type: OPEN_CHANGE_PASSWORD }),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile);\r\n","// import installed packages\r\nimport { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\n// import styles\r\n\r\n// import material ui items\r\nimport { CircularProgress } from \"@material-ui/core\";\r\n// import shared/global items\r\nimport { ifEmpty, resetFormValues } from \"../../../../shared/sharedFunctions\";\r\n// import components/pages\r\n\r\nimport MediumDialog from \"../../../../components/common/MediumDialog\";\r\nimport { START_LOADING } from \"../../../../redux/actions/types\";\r\nimport { add_organization } from \"../../../../redux/actions/work\";\r\n// import redux API\r\n\r\nconst AddOrganization = (props) => {\r\n  const { openAddOrganization, loading, userId } = props;\r\n  const { setOpenAddOrganization, startLoading, addOrganization } = props;\r\n  const [newOrganization, setNewOrganization] = useState({\r\n    name: \"\",\r\n    initials: \"\",\r\n  });\r\n\r\n  ////////// DESTRUCTURING VALUES\r\n  const { name, initials } = newOrganization;\r\n\r\n  const handleChange = (e) => {\r\n    setNewOrganization({ ...newOrganization, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const resetForm = () => {\r\n    resetFormValues(newOrganization);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    resetForm();\r\n    setOpenAddOrganization(false);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (ifEmpty(newOrganization)) {\r\n      return window.alert(\"All fields are required\");\r\n    }\r\n    startLoading();\r\n    addOrganization(userId, newOrganization, resetForm);\r\n  };\r\n\r\n  return (\r\n    <MediumDialog isOpen={openAddOrganization} maxWidth=\"800px\">\r\n      <form className=\"dialog\" id={loading ? \"formSubmitting\" : \"\"}>\r\n        <h3>Organization details</h3>\r\n        <div className=\"dialog__row\">\r\n          <span>\r\n            <label htmlFor=\"\">Name</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              onChange={handleChange}\r\n              value={name}\r\n            />\r\n          </span>\r\n          {loading && (\r\n            <CircularProgress\r\n              style={{ position: \"absolute\", marginLeft: \"42%\" }}\r\n            />\r\n          )}\r\n          <span>\r\n            <label htmlFor=\"\">Initials</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"initials\"\r\n              onChange={handleChange}\r\n              value={initials}\r\n            />\r\n          </span>\r\n        </div>\r\n        <div className=\"form__Buttons\">\r\n          <button type=\"button\" onClick={handleClose}>\r\n            Close\r\n          </button>\r\n          <button type=\"button\" onClick={handleSubmit}>\r\n            Submit\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </MediumDialog>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    loading: state.shared?.loading,\r\n    userId: state.auth.user?.id,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    startLoading: () => dispatch({ type: START_LOADING }),\r\n    addOrganization: (userId, body, resetForm) =>\r\n      dispatch(add_organization(userId, body, resetForm)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddOrganization);\r\n","// import installed packages\r\nimport { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n// import styles\r\n\r\n// import material ui items\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n// import shared/global items\r\n\r\n// import components/pages\r\nimport MinDialog from \"../../../../components/common/MinDialog\";\r\n\r\n// import redux API\r\nimport { START_LOADING } from \"../../../../redux/actions/types\";\r\nimport { add_or_remove_organization_admin } from \"../../../../redux/actions/work\";\r\n\r\nconst AddOrganizationAdmin = (props) => {\r\n  const { openAddOrganizationAdmin, userId, loading, organizationId } = props;\r\n  const { setOpenAddOrganizationAdmin, addOrganizationAdmin, startLoading } =\r\n    props;\r\n  const [userEmail, setUserEmail] = useState(\"\");\r\n\r\n  const resetForm = () => {\r\n    setUserEmail(\"\");\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpenAddOrganizationAdmin(false);\r\n    resetForm();\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (userEmail.trim() === \"\") {\r\n      return window.alert(\"Please enter a valid email\");\r\n    }\r\n    const body = {\r\n      userEmail,\r\n      actionType: \"add_organization_admin\",\r\n      organizationId,\r\n    };\r\n    startLoading();\r\n    addOrganizationAdmin(userId, body, resetForm);\r\n  };\r\n\r\n  return (\r\n    <MinDialog isOpen={openAddOrganizationAdmin} maxWidth=\"500px\">\r\n      <form\r\n        className=\"dialog\"\r\n        id={loading ? \"formSubmitting\" : \"\"}\r\n        onSubmit={handleSubmit}\r\n      >\r\n        <h3>Enter user email</h3>\r\n        {loading && (\r\n          <CircularProgress\r\n            style={{ position: \"absolute\", marginLeft: \"40%\" }}\r\n          />\r\n        )}\r\n        <div className=\"dialog__rowSingleItem\">\r\n          <label htmlFor=\"\">Email</label>\r\n          <input\r\n            type=\"email\"\r\n            onChange={(e) => setUserEmail(e.target.value)}\r\n            value={userEmail}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form__Buttons\">\r\n          <button type=\"button\" onClick={handleClose}>\r\n            Close\r\n          </button>\r\n          <button type=\"submit\">Submit</button>\r\n        </div>\r\n      </form>\r\n    </MinDialog>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userId: state.auth.user?.id,\r\n    loading: state.shared?.loading,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    startLoading: () => dispatch({ type: START_LOADING }),\r\n    addOrganizationAdmin: (userId, body, resetForm) =>\r\n      dispatch(add_or_remove_organization_admin(userId, body, resetForm)),\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(AddOrganizationAdmin);\r\n","// import installed packages\r\nimport { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\n// import styles\r\n\r\n// import material ui items\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n// import shared/global items\r\n\r\n// import components/pages\r\nimport AddOrganization from \"./components/AddOrganization\";\r\nimport AddOrganizationAdmin from \"./components/AddOrganizationAdmin\";\r\n// import redux API\r\nimport { START_LOADING } from \"../../../redux/actions/types\";\r\nimport {\r\n  add_or_remove_organization_admin,\r\n  get_organizations,\r\n} from \"../../../redux/actions/work\";\r\n\r\nconst MaintainOrganizations = (props) => {\r\n  const { organizations, userId, loading } = props;\r\n  const { getOrganizations, startLoading, removeOrganizationAdmin } = props;\r\n  const [openAddOrganization, setOpenAddOrganization] = useState(false);\r\n  const [openAddOrganizationAdmin, setOpenAddOrganizationAdmin] =\r\n    useState(false);\r\n  const [currentOrganizationId, setCurrentOrganizationId] = useState({});\r\n\r\n  // useEffect to get all organizations\r\n  useEffect(() => {\r\n    if (userId && organizations?.length === 0) {\r\n      startLoading();\r\n      getOrganizations(userId);\r\n    }\r\n  }, [startLoading, getOrganizations, organizations?.length, userId]);\r\n\r\n  const openAddOrganizationAdminForm = (organizationId) => {\r\n    setOpenAddOrganizationAdmin(true);\r\n    setCurrentOrganizationId(organizationId);\r\n  };\r\n\r\n  // since reset form is an argument in add_or_remove action call, we just define and empty resetform function\r\n  const resetForm = () => {};\r\n\r\n  // function to handle remove organization admin\r\n  const deleteOrganizationAdmin = (organizationId) => {\r\n    if (\r\n      window.confirm(`Are you sure you want to remove this organization admin?`)\r\n    ) {\r\n      startLoading();\r\n      const body = {\r\n        actionType: \"remove_organization_admin\",\r\n        organizationId,\r\n      };\r\n      removeOrganizationAdmin(userId, body, resetForm);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"table__parent\" id={loading ? \"pageSubmitting\" : \"\"}>\r\n        <div className=\"table__parentHeader\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"add__button\"\r\n            onClick={() => setOpenAddOrganization(true)}\r\n          >\r\n            Add\r\n          </button>\r\n          <h3> Maintain organizations here</h3>\r\n          {loading && <CircularProgress style={{ position: \"absolute\" }} />}\r\n        </div>\r\n        <table className=\"table__listing\">\r\n          {organizations?.length > 0 ? (\r\n            <>\r\n              <tr className=\"table__listingHeader\">\r\n                <th>No:</th>\r\n                <th>Name</th>\r\n                <th>Initials</th>\r\n                <th>Admin</th>\r\n              </tr>\r\n              {organizations?.map((organization, index) => (\r\n                <tr className=\"table__listingItem\" key={organization?.id}>\r\n                  <td>{index + 1}</td>\r\n                  <td>{organization.name}</td>\r\n                  <td>{organization.initials}</td>\r\n                  {organization?.organization_admin_email ? (\r\n                    <td\r\n                      className=\"remove__item\"\r\n                      title=\"Click to remove admin\"\r\n                      onClick={() => deleteOrganizationAdmin(organization?.id)}\r\n                    >\r\n                      {organization?.organization_admin_email}\r\n                    </td>\r\n                  ) : (\r\n                    <td\r\n                      className=\"button dodgerblue bd\"\r\n                      onClick={() =>\r\n                        openAddOrganizationAdminForm(organization?.id)\r\n                      }\r\n                    >\r\n                      add\r\n                    </td>\r\n                  )}\r\n                </tr>\r\n              ))}\r\n            </>\r\n          ) : (\r\n            <h4 className=\"not__available\">No organizations available</h4>\r\n          )}\r\n        </table>\r\n      </div>\r\n      {/* child components */}\r\n      {openAddOrganization && (\r\n        <AddOrganization\r\n          openAddOrganization={openAddOrganization}\r\n          setOpenAddOrganization={setOpenAddOrganization}\r\n        />\r\n      )}\r\n      {openAddOrganizationAdmin && (\r\n        <AddOrganizationAdmin\r\n          openAddOrganizationAdmin={openAddOrganizationAdmin}\r\n          setOpenAddOrganizationAdmin={setOpenAddOrganizationAdmin}\r\n          organizationId={currentOrganizationId}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    organizations: state.work?.organizations,\r\n    userId: state.auth.user?.id,\r\n    loading: state.shared?.loading,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    startLoading: () => dispatch({ type: START_LOADING }),\r\n    getOrganizations: (userId) => dispatch(get_organizations(userId)),\r\n    removeOrganizationAdmin: (userId, body, resetForm) =>\r\n      dispatch(add_or_remove_organization_admin(userId, body, resetForm)),\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(MaintainOrganizations);\r\n","// import installed packages\r\nimport { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n// import styles\r\n// import material ui items\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n// import shared/global items\r\nimport { ifEmpty, resetFormValues } from \"../../../../shared/sharedFunctions\";\r\n// import components/pages\r\nimport MediumDialog from \"../../../../components/common/MediumDialog\";\r\nimport Markdown from \"../../../../components/common/Markdown/Markdown\";\r\n// import redux API\r\nimport { START_LOADING } from \"../../../../redux/actions/types\";\r\nimport { new_organization_task } from \"../../../../redux/actions/work\";\r\n\r\nconst AddTask = (props) => {\r\n  const { openAddTask, loading, userId } = props;\r\n  const { setOpenAddTask, startLoading, newOrganizationTask } = props;\r\n  const [newTask, setNewTask] = useState({\r\n    title: \"\",\r\n    user_minimum_rating: \"\",\r\n    status: \"\",\r\n    attachment: \"\",\r\n  });\r\n  const [instructions, setInstructions] = useState(\"\");\r\n\r\n  // DESTRUCTURING\r\n  const { title, user_minimum_rating, status, attachment } = newTask;\r\n\r\n  const handleChange = (e) => {\r\n    setNewTask({ ...newTask, [e.target.name]: e.target.value });\r\n  };\r\n  const handleFileChange = (e) => {\r\n    setNewTask({ ...newTask, [e.target.name]: e.target.files[0] });\r\n  };\r\n\r\n  const resetForm = () => {\r\n    resetFormValues(newTask);\r\n    setInstructions(\"\");\r\n  };\r\n  const handleClose = () => {\r\n    resetForm();\r\n    setOpenAddTask(false);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (ifEmpty(newTask) || instructions.trim() === \"\") {\r\n      return window.alert(\"Please fill all fields\");\r\n    }\r\n    if (user_minimum_rating > 5 || user_minimum_rating < 1) {\r\n      return window.alert(\r\n        \"User qualification rating should be between 1 and 5\"\r\n      );\r\n    }\r\n    startLoading();\r\n    let formData = new FormData();\r\n    formData.append(\"attachment\", attachment, attachment.name);\r\n    formData.append(\"user_minimum_rating\", user_minimum_rating);\r\n    formData.append(\"status\", status);\r\n    formData.append(\"title\", title);\r\n    formData.append(\"instructions\", instructions);\r\n    newOrganizationTask(userId, formData, resetForm);\r\n  };\r\n\r\n  return (\r\n    <MediumDialog isOpen={openAddTask} maxWidth=\"850px\">\r\n      <form\r\n        className=\"dialog\"\r\n        onSubmit={handleSubmit}\r\n        id={loading ? \"formSubmitting\" : \"\"}\r\n      >\r\n        <h3>Task details</h3>\r\n        <div className=\"dialog__row\">\r\n          <span>\r\n            <label htmlFor=\"\">Title</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"title\"\r\n              onChange={handleChange}\r\n              value={title}\r\n            />\r\n          </span>\r\n          <span title=\"The minimum qualification required for workers to work on this task\">\r\n            <label htmlFor=\"\">User Qualification Rating (1 - 5)</label>\r\n            <input\r\n              type=\"number\"\r\n              name=\"user_minimum_rating\"\r\n              onChange={handleChange}\r\n              value={user_minimum_rating}\r\n              min=\"1\"\r\n              max=\"5\"\r\n            />\r\n          </span>\r\n        </div>\r\n        {loading && (\r\n          <CircularProgress\r\n            style={{ position: \"absolute\", marginLeft: \"43%\" }}\r\n          />\r\n        )}\r\n        <div className=\"dialog__row\">\r\n          <span>\r\n            <label htmlFor=\"\">Task Status</label>\r\n            <select name=\"status\" onChange={handleChange} value={status}>\r\n              <option value=\"\" disabled selected>\r\n                ---select---\r\n              </option>\r\n              <option value=\"draft\">Draft</option>\r\n              <option value=\"available\">Published</option>\r\n            </select>\r\n          </span>\r\n          <span>\r\n            <label htmlFor=\"\">Task Attachment</label>\r\n            <input type=\"file\" name=\"attachment\" onChange={handleFileChange} />\r\n          </span>\r\n        </div>\r\n        <div className=\"dialog__rowSingleItem\">\r\n          <label htmlFor=\"\">Task Instructions</label>\r\n          <Markdown content={instructions} setContent={setInstructions} />\r\n        </div>\r\n        <div className=\"form__Buttons\">\r\n          <button type=\"button\" onClick={handleClose}>\r\n            Close\r\n          </button>\r\n          <button type=\"submit\">Submit</button>\r\n        </div>\r\n      </form>\r\n    </MediumDialog>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    loading: state.shared?.loading,\r\n    userId: state.auth.user?.id,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    startLoading: () => dispatch({ type: START_LOADING }),\r\n    newOrganizationTask: (userId, body, resetForm) =>\r\n      dispatch(new_organization_task(userId, body, resetForm)),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddTask);\r\n","// import installed packages\r\nimport { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n// import styles\r\n// import material ui items\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n// import shared/global items\r\n// import components/pages\r\nimport MediumDialog from \"../../../../components/common/MediumDialog\";\r\nimport Markdown from \"../../../../components/common/Markdown/Markdown\";\r\n// import redux API\r\nimport { START_LOADING } from \"../../../../redux/actions/types\";\r\nimport { edit_organization_task } from \"../../../../redux/actions/work\";\r\n\r\nconst EditTask = (props) => {\r\n  const { openEditTask, currentTask, userId, loading } = props;\r\n  const { setCurrentTask, setOpenEditTask, startLoading, editOrganization } =\r\n    props;\r\n  const [instructions, setInstructions] = useState(\"\");\r\n\r\n  // DESTRUCTURING\r\n  const { title, user_minimum_rating, status, attachment } = currentTask;\r\n\r\n  useEffect(() => {\r\n    setInstructions(currentTask?.instructions);\r\n  }, [currentTask?.instructions]);\r\n\r\n  const handleChange = (e) => {\r\n    setCurrentTask({ ...currentTask, [e.target.name]: e.target.value });\r\n  };\r\n  const handleFileChange = (e) => {\r\n    setCurrentTask({ ...currentTask, [e.target.name]: e.target.files[0] });\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpenEditTask(false);\r\n  };\r\n\r\n  const handleEdit = (e) => {\r\n    e.preventDefault();\r\n    if (\r\n      title.trim() === \"\" ||\r\n      user_minimum_rating === \"\" ||\r\n      status.trim() === \"\"\r\n    ) {\r\n      return window.alert(\"Please fill all fields\");\r\n    }\r\n    if (user_minimum_rating > 5 || user_minimum_rating < 1) {\r\n      return window.alert(\r\n        \"User qualification rating should be between 1 and 5\"\r\n      );\r\n    }\r\n    startLoading();\r\n    let formData = new FormData();\r\n    if (attachment) {\r\n      formData.append(\"attachment\", attachment, attachment.name);\r\n    } else {\r\n      formData.append(\"attachment\", \"\");\r\n    }\r\n\r\n    formData.append(\"user_minimum_rating\", user_minimum_rating);\r\n    formData.append(\"status\", status);\r\n    formData.append(\"title\", title);\r\n    formData.append(\"taskId\", currentTask?.id);\r\n    formData.append(\"instructions\", instructions);\r\n    editOrganization(userId, formData);\r\n  };\r\n\r\n  return (\r\n    <MediumDialog isOpen={openEditTask} maxWidth=\"800px\">\r\n      <form\r\n        className=\"dialog\"\r\n        onSubmit={handleEdit}\r\n        id={loading ? \"formSubmitting\" : \"\"}\r\n      >\r\n        <h3>Edit task details</h3>\r\n        <div className=\"dialog__row\">\r\n          <span>\r\n            <label htmlFor=\"\">Title</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"title\"\r\n              onChange={handleChange}\r\n              value={title}\r\n            />\r\n          </span>\r\n          <span title=\"The minimum qualification required for workers to work on this task\">\r\n            <label htmlFor=\"\">User Qualification Rating (1 - 5)</label>\r\n            <input\r\n              type=\"number\"\r\n              name=\"user_minimum_rating\"\r\n              onChange={handleChange}\r\n              value={user_minimum_rating}\r\n              min=\"1\"\r\n              max=\"5\"\r\n            />\r\n          </span>\r\n        </div>\r\n        {loading && (\r\n          <CircularProgress\r\n            style={{ position: \"absolute\", marginLeft: \"43%\" }}\r\n          />\r\n        )}\r\n        <div className=\"dialog__row\">\r\n          <span>\r\n            <label htmlFor=\"\">Task Status</label>\r\n            <select name=\"status\" onChange={handleChange} value={status}>\r\n              <option value=\"\" disabled selected>\r\n                ---select---\r\n              </option>\r\n              <option value=\"draft\">Draft</option>\r\n              <option value=\"available\">Published</option>\r\n            </select>\r\n          </span>\r\n          <span>\r\n            <label htmlFor=\"\">Task Attachment</label>\r\n            <input type=\"file\" name=\"attachment\" onChange={handleFileChange} />\r\n          </span>\r\n        </div>\r\n        <div className=\"dialog__rowSingleItem\">\r\n          <label htmlFor=\"\">Task Instructions</label>\r\n          <Markdown content={instructions} setContent={setInstructions} />\r\n        </div>\r\n        <div className=\"form__Buttons\">\r\n          <button type=\"button\" onClick={handleClose}>\r\n            Close\r\n          </button>\r\n          <button type=\"submit\">Submit</button>\r\n        </div>\r\n      </form>\r\n    </MediumDialog>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userId: state.auth.user?.id,\r\n    loading: state.shared?.loading,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    startLoading: () => dispatch({ type: START_LOADING }),\r\n    editOrganization: (userId, body) =>\r\n      dispatch(edit_organization_task(userId, body)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EditTask);\r\n","// import installed packages\r\nimport { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n// import styles\r\n// import material ui items\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\n// import shared/global items\r\n// import components/pages\r\nimport AddTask from \"./components/AddTask\";\r\nimport EditTask from \"./components/EditTask\";\r\n// import redux API\r\nimport { START_LOADING } from \"../../../redux/actions/types\";\r\nimport { get_all_tasks } from \"../../../redux/actions/work\";\r\n\r\nconst MaintainTasks = (props) => {\r\n  const { loading, organizationTasks, userId } = props;\r\n  const { startLoading, getAllTasks } = props;\r\n  const [openAddTask, setOpenAddTask] = useState(false);\r\n  const [openEditTask, setOpenEditTask] = useState(false);\r\n  const [currentTask, setCurrentTask] = useState({});\r\n\r\n  useEffect(() => {\r\n    if (organizationTasks?.length === 0 && userId) {\r\n      startLoading();\r\n      getAllTasks(userId);\r\n    }\r\n  }, [userId, startLoading, organizationTasks?.length, getAllTasks]);\r\n\r\n  const openEditTaskForm = (task) => {\r\n    setOpenEditTask(true);\r\n    setCurrentTask(task);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"table__parent\">\r\n        <div className=\"table__parentHeader\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"add__button\"\r\n            onClick={() => setOpenAddTask(true)}\r\n          >\r\n            Add\r\n          </button>\r\n          <h3> Maintain Tasks here</h3>\r\n          {loading && <CircularProgress style={{ position: \"absolute\" }} />}\r\n        </div>\r\n        <table className=\"table__listing\">\r\n          {organizationTasks?.length > 0 ? (\r\n            <>\r\n              <tr className=\"table__listingHeader\">\r\n                <th>No:</th>\r\n                <th>Title</th>\r\n                <th>Edit</th>\r\n              </tr>\r\n              {organizationTasks?.map((task, index) => (\r\n                <tr className=\"table__listingItem\">\r\n                  <td>{index + 1}</td>\r\n                  <td>{task?.title}</td>\r\n                  <td\r\n                    className=\"dodgerblue bd button\"\r\n                    onClick={() => openEditTaskForm(task)}\r\n                  >\r\n                    edit\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </>\r\n          ) : (\r\n            <h4 className=\"not__available\">No tasks available</h4>\r\n          )}\r\n        </table>\r\n      </div>\r\n      {/* child components */}\r\n      {openAddTask && (\r\n        <AddTask openAddTask={openAddTask} setOpenAddTask={setOpenAddTask} />\r\n      )}\r\n      {openEditTask && (\r\n        <EditTask\r\n          openEditTask={openEditTask}\r\n          setOpenEditTask={setOpenEditTask}\r\n          currentTask={currentTask}\r\n          setCurrentTask={setCurrentTask}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userId: state.auth.user?.id,\r\n    loading: state.shared?.loading,\r\n    organizationTasks: state.work?.organization_tasks,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    startLoading: () => dispatch({ type: START_LOADING }),\r\n    getAllTasks: (userId) => dispatch(get_all_tasks(userId)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MaintainTasks);\r\n","// import installed packages\r\nimport { connect } from \"react-redux\";\r\nimport moment from \"moment\";\r\n// import styles\r\n// import material ui items\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n// import shared/global items\r\n// import components/pages\r\nimport MediumDialog from \"../../../../components/common/MediumDialog\";\r\n\r\n// import redux API\r\nimport { START_LOADING } from \"../../../../redux/actions/types\";\r\nimport { edit_worker_or_application } from \"../../../../redux/actions/work\";\r\n\r\nconst EditWorkerApplication = (props) => {\r\n  const {\r\n    openEditWorkerApplication,\r\n    currentWorkerApplication,\r\n    loading,\r\n    userId,\r\n  } = props;\r\n  const {\r\n    setOpenEditWorkerApplication,\r\n    setCurrentWorkerApplication,\r\n    startLoading,\r\n    editWorkerOrApplication,\r\n  } = props;\r\n\r\n  // DESTRUCTURING\r\n  const {\r\n    id,\r\n    full_name,\r\n    occupation,\r\n    mpesa_number,\r\n    national_id,\r\n    applied_on,\r\n    status,\r\n    about_worker,\r\n    rejection_reason,\r\n  } = currentWorkerApplication;\r\n\r\n  const handleChange = (e) => {\r\n    setCurrentWorkerApplication({\r\n      ...currentWorkerApplication,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpenEditWorkerApplication(false);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (\r\n      status === \"rejected\" &&\r\n      (rejection_reason === \"\" || rejection_reason === null)\r\n    ) {\r\n      return window.alert(\"You must indicate the rejection reason\");\r\n    }\r\n    const body = {\r\n      applicationId: id,\r\n      rejection_reason,\r\n      status,\r\n      worker_or_application: \"application\",\r\n    };\r\n    startLoading();\r\n    editWorkerOrApplication(userId, body);\r\n  };\r\n\r\n  return (\r\n    <MediumDialog isOpen={openEditWorkerApplication} maxWidth=\"800px\">\r\n      <form\r\n        className=\"dialog\"\r\n        onSubmit={handleSubmit}\r\n        id={loading ? \"formSubmitting\" : \"\"}\r\n      >\r\n        <h3>Application details</h3>\r\n        <div className=\"dialog__row\">\r\n          <span>\r\n            <label htmlFor=\"\">Name</label>\r\n            <input type=\"text\" value={full_name} disabled readOnly />\r\n          </span>\r\n          <span>\r\n            <label htmlFor=\"\">Occupation</label>\r\n            <input type=\"text\" value={occupation} disabled readOnly />\r\n          </span>\r\n        </div>\r\n        <div className=\"dialog__row\">\r\n          <span>\r\n            <label htmlFor=\"\">Mpesa Number</label>\r\n            <input type=\"text\" value={mpesa_number} disabled readOnly />\r\n          </span>\r\n          <span>\r\n            <label htmlFor=\"\">National ID</label>\r\n            <input type=\"text\" value={national_id} disabled readOnly />\r\n          </span>\r\n        </div>\r\n        <div className=\"dialog__row\">\r\n          <span>\r\n            <label htmlFor=\"\">Applied On</label>\r\n            <input\r\n              type=\"text\"\r\n              value={moment(applied_on).format(\"LLL\")}\r\n              disabled\r\n              readOnly\r\n            />\r\n          </span>\r\n          <span>\r\n            <label htmlFor=\"\">Status</label>\r\n            <select name=\"status\" value={status} onChange={handleChange}>\r\n              <option value=\"approved\">Approved</option>\r\n              <option value=\"pending\">Pending</option>\r\n              <option value=\"rejected\">Rejected</option>\r\n            </select>\r\n          </span>\r\n        </div>\r\n        {loading && (\r\n          <CircularProgress\r\n            style={{ position: \"absolute\", marginLeft: \"43%\" }}\r\n          />\r\n        )}\r\n        <div className=\"dialog__rowSingleItem\">\r\n          <label htmlFor=\"\">About User</label>\r\n          <textarea value={about_worker} disabled readOnly />\r\n        </div>\r\n        {status === \"rejected\" && (\r\n          <div className=\"dialog__rowSingleItem\">\r\n            <label htmlFor=\"\">Rejection Reason</label>\r\n            <textarea\r\n              name=\"rejection_reason\"\r\n              value={rejection_reason}\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n        )}\r\n        <div className=\"form__Buttons\">\r\n          <button type=\"button\" onClick={handleClose}>\r\n            Close\r\n          </button>\r\n          <button type=\"submit\">Update</button>\r\n        </div>\r\n      </form>\r\n    </MediumDialog>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userId: state.auth.user?.id,\r\n    loading: state.shared?.loading,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    startLoading: () => dispatch({ type: START_LOADING }),\r\n    editWorkerOrApplication: (userId, body) =>\r\n      dispatch(edit_worker_or_application(userId, body)),\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(EditWorkerApplication);\r\n","// import installed packages\r\nimport { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport moment from \"moment\";\r\nimport { useState } from \"react\";\r\n\r\n// import styles\r\n// import material ui items\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n// import shared/global items\r\n// import components/pages\r\n// import redux API\r\nimport { START_LOADING } from \"../../../redux/actions/types\";\r\nimport { get_workers } from \"../../../redux/actions/work\";\r\nimport EditWorkerApplication from \"./components/EditWorkerApplication\";\r\n\r\nconst MaintainWorkers = (props) => {\r\n  const { workers, workers_applications, userId, loading } = props;\r\n  const { startLoading, getWorkers } = props;\r\n  const [openEditWorkerApplication, setOpenEditWorkerApplication] =\r\n    useState(false);\r\n  const [currentWorkerApplication, setCurrentWorkerApplication] = useState({});\r\n\r\n  // useEffect to get all workers and applications\r\n  useEffect(() => {\r\n    if (workers_applications?.length === 0 && userId) {\r\n      startLoading();\r\n      getWorkers(userId);\r\n    }\r\n  }, [getWorkers, startLoading, userId, workers_applications?.length]);\r\n\r\n  const openEditWorkerApplicationForm = (worker_application) => {\r\n    setOpenEditWorkerApplication(true);\r\n    setCurrentWorkerApplication(worker_application);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"table__parent\">\r\n        <div className=\"table__parentHeader\">\r\n          <h3>Workers</h3>\r\n          {loading && <CircularProgress style={{ position: \"absolute\" }} />}\r\n        </div>\r\n        <table className=\"table__listing\">\r\n          {workers?.length > 0 ? (\r\n            <>\r\n              <tr className=\"table__listingHeader\">\r\n                <th>No:</th>\r\n                <th>Name</th>\r\n              </tr>\r\n              {workers?.map((worker, index) => (\r\n                <tr className=\"table__listingItem\">\r\n                  <td>{index + 1}</td>\r\n                  <td>{worker?.full_name}</td>\r\n                </tr>\r\n              ))}\r\n            </>\r\n          ) : (\r\n            <h4 className=\"not__available\">No workers yet</h4>\r\n          )}\r\n        </table>\r\n        <div className=\"table__parentHeader\">\r\n          <h3>Workers applications</h3>\r\n        </div>\r\n        <table className=\"table__listing\">\r\n          {workers_applications?.length > 0 ? (\r\n            <>\r\n              <tr className=\"table__listingHeader\">\r\n                <th>No:</th>\r\n                <th>Name</th>\r\n                <th>Applied On</th>\r\n                <th>Action</th>\r\n              </tr>\r\n              {workers_applications?.map((worker_application, index) => (\r\n                <tr className=\"table__listingItem\" key={worker_application?.id}>\r\n                  <td>{index + 1}</td>\r\n                  <td>{worker_application?.full_name}</td>\r\n                  <td>{moment(worker_application.applied_on).format(\"LLL\")}</td>\r\n                  {worker_application?.status !== \"approved\" ? (\r\n                    <td\r\n                      className=\"button dodgerblue bd\"\r\n                      onClick={() =>\r\n                        openEditWorkerApplicationForm(worker_application)\r\n                      }\r\n                    >\r\n                      process\r\n                    </td>\r\n                  ) : (\r\n                    <td>Approved</td>\r\n                  )}\r\n                </tr>\r\n              ))}\r\n            </>\r\n          ) : (\r\n            <h4 className=\"not__available\">No workers applications yet</h4>\r\n          )}\r\n        </table>\r\n      </div>\r\n      {/* child components */}\r\n      {openEditWorkerApplication && (\r\n        <EditWorkerApplication\r\n          openEditWorkerApplication={openEditWorkerApplication}\r\n          setOpenEditWorkerApplication={setOpenEditWorkerApplication}\r\n          currentWorkerApplication={currentWorkerApplication}\r\n          setCurrentWorkerApplication={setCurrentWorkerApplication}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    workers: state.work?.workers,\r\n    workers_applications: state.work?.workers_applications,\r\n    loading: state.shared?.loading,\r\n    userId: state.auth.user.id,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    startLoading: () => dispatch({ type: START_LOADING }),\r\n    getWorkers: (userId) => dispatch(get_workers(userId)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MaintainWorkers);\r\n","// material ui items\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\n\r\nconst MaxDialog = (props) => {\r\n  return (\r\n    <Dialog\r\n      open={props.isOpen}\r\n      maxWidth=\"lg\"\r\n      style={{ maxWidth: props?.maxWidth, margin: \"auto\" }}\r\n      fullWidth\r\n    >\r\n      {props.children}\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default MaxDialog;\r\n","// import installed packages\r\nimport parse from \"html-react-parser\";\r\n// import styles\r\n// import material ui items\r\n// import shared/global items\r\n// import components/pages\r\nimport MediumDialog from \"../../../../../components/common/MediumDialog\";\r\n// import redux API\r\n\r\nconst Instructions = (props) => {\r\n  const { openInstructions, currentTask, setOpenInstructions } = props;\r\n  return (\r\n    <MediumDialog isOpen={openInstructions} maxWidth=\"1000px\">\r\n      <div className=\"dialog\">\r\n        <h3>Task Instructions</h3>\r\n        <div>{parse(`${currentTask?.instructions}`)}</div>\r\n        <div className=\"form__Buttons\">\r\n          <button type=\"button\" onClick={() => setOpenInstructions(false)}>\r\n            Close\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </MediumDialog>\r\n  );\r\n};\r\n\r\nexport default Instructions;\r\n","// import installed packages\r\nimport { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n// import styles\r\n// import material ui items\r\n// import shared/global items\r\nimport API from \"../../../../shared/axios\";\r\n// import components/pages\r\nimport MaxDialog from \"../../../../components/common/MaxDialog\";\r\n// import redux API\r\nimport { START_LOADING, STOP_LOADING } from \"../../../../redux/actions/types\";\r\nimport { showError } from \"../../../../redux/actions/shared\";\r\nimport Instructions from \"./components/Instructions\";\r\n\r\nconst TasksAvailable = (props) => {\r\n  const { openTasksAvailable, userId, loading } = props;\r\n  const { setOpenTasksAvailable, startLoading, stopLoading } = props;\r\n\r\n  const [availableTasks, setAvailableTasks] = useState([]);\r\n\r\n  const [openInstructions, setOpenInstructions] = useState(false);\r\n  const [currentTask, setCurrentTask] = useState({});\r\n\r\n  // useEffect to get available tasks\r\n  useEffect(() => {\r\n    if (userId) {\r\n      startLoading();\r\n      const fetchData = async () => {\r\n        const url = `/api/work/worker-get-tasks-available/${userId}/`;\r\n        await API.get(url).then((res) => {\r\n          setAvailableTasks(res.data?.available_tasks);\r\n        });\r\n      };\r\n      fetchData()\r\n        .catch((err) => showError(err))\r\n        .finally(() => stopLoading());\r\n    }\r\n  }, [startLoading, stopLoading, userId]);\r\n\r\n  const handleOpenInstructions = (task) => {\r\n    setCurrentTask(task);\r\n    setOpenInstructions(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <MaxDialog isOpen={openTasksAvailable} maxWidth=\"1200px\">\r\n        <div className=\"dialog\" id={loading ? \"pageSubmitting\" : \"\"}>\r\n          <h3>Tasks available</h3>\r\n          {availableTasks?.length > 0 ? (\r\n            <table className=\"table__listing\">\r\n              <tr className=\"table__listingHeader\">\r\n                <th>No:</th>\r\n                <th>Title</th>\r\n                <th>Instructions</th>\r\n                <th>Attachment</th>\r\n              </tr>\r\n              {availableTasks?.map((task, index) => (\r\n                <tr className=\"table__listingItem\" key={task?.id}>\r\n                  <td>{index + 1}</td>\r\n                  <td>{task?.title}</td>\r\n                  <td\r\n                    className=\"button dodgerblue bd\"\r\n                    onClick={() => handleOpenInstructions(task)}\r\n                  >\r\n                    view\r\n                  </td>\r\n                  <td>\r\n                    <Link\r\n                      to={`${task?.attachment}`}\r\n                      className=\"button dodgerblue bd\"\r\n                      target=\"_blank\"\r\n                    >\r\n                      Open\r\n                    </Link>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </table>\r\n          ) : (\r\n            <h4 className=\"not__available\">No tasks available</h4>\r\n          )}\r\n          <div className=\"form__Buttons\">\r\n            <button type=\"button\" onClick={() => setOpenTasksAvailable(false)}>\r\n              Close\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </MaxDialog>\r\n      {openInstructions && (\r\n        <Instructions\r\n          openInstructions={openInstructions}\r\n          setOpenInstructions={setOpenInstructions}\r\n          currentTask={currentTask}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userId: state.auth.user?.id,\r\n    loading: state.shared?.loading,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    startLoading: () => dispatch({ type: START_LOADING }),\r\n    stopLoading: () => dispatch({ type: STOP_LOADING }),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TasksAvailable);\r\n","// import installed packages\r\n// import styles\r\n// import material ui items\r\n// import shared/global items\r\n// import components/pages\r\nimport MaxDialog from \"../../../../components/common/MaxDialog\";\r\n// import redux API\r\n\r\nconst TasksOngoing = (props) => {\r\n  const { openTasksOngoing } = props;\r\n  const { setOpenTasksOngoing } = props;\r\n\r\n  return (\r\n    <MaxDialog isOpen={openTasksOngoing} maxWidth=\"1200px\">\r\n      <div className=\"dialog\">\r\n        <h3>Tasks Ongoing</h3>\r\n        <div className=\"form__Buttons\">\r\n          <button type=\"button\" onClick={() => setOpenTasksOngoing(false)}>\r\n            Close\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </MaxDialog>\r\n  );\r\n};\r\n\r\nexport default TasksOngoing;\r\n","// import installed packages\r\n// import styles\r\n// import material ui items\r\n// import shared/global items\r\n// import components/pages\r\nimport MaxDialog from \"../../../../components/common/MaxDialog\";\r\n// import redux API\r\n\r\nconst TasksSubmitted = (props) => {\r\n  const { openTasksSubmitted } = props;\r\n  const { setOpenTasksSubmitted } = props;\r\n\r\n  return (\r\n    <MaxDialog isOpen={openTasksSubmitted} maxWidth=\"1200px\">\r\n      <div className=\"dialog\">\r\n        <h3>Tasks Submitted</h3>\r\n        <div className=\"form__Buttons\">\r\n          <button type=\"button\" onClick={() => setOpenTasksSubmitted(false)}>\r\n            Close\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </MaxDialog>\r\n  );\r\n};\r\n\r\nexport default TasksSubmitted;\r\n","// import installed packages\r\nimport { useState } from \"react\";\r\nimport TasksAvailable from \"../components/TasksAvailable/TasksAvailable\";\r\nimport TasksOngoing from \"../components/TasksOngoing/TasksOngoing\";\r\nimport TasksSubmitted from \"../components/TasksSubmitted/TasksSubmitted\";\r\n// import styles\r\nimport \"./WorkCenter.css\";\r\n// import material ui items\r\n// import shared/global items\r\n// import components/pages\r\n// import redux API\r\n\r\nconst WorkCenter = () => {\r\n  const [openTasksAvailable, setOpenTasksAvailable] = useState(false);\r\n  const [openTasksOngoing, setOpenTasksOngoing] = useState(false);\r\n  const [openTasksSubmitted, setOpenTasksSubmitted] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"table__parent\">\r\n        <div className=\"table__parentHeader\">\r\n          <h3>Your Work Center</h3>\r\n        </div>\r\n        <table className=\"table__listing\">\r\n          <tr className=\"table__listingHeader\">\r\n            <th>Type</th>\r\n            <th>Action</th>\r\n          </tr>\r\n          <tr className=\"table__listingItem\">\r\n            <td>Tasks Available</td>\r\n            <td\r\n              className=\"button dodgerblue bd\"\r\n              onClick={() => setOpenTasksAvailable(true)}\r\n            >\r\n              View\r\n            </td>\r\n          </tr>\r\n          <tr className=\"table__listingItem\">\r\n            <td>Ongoing Tasks</td>\r\n            <td\r\n              className=\"button dodgerblue bd\"\r\n              onClick={() => setOpenTasksOngoing(true)}\r\n            >\r\n              View\r\n            </td>\r\n          </tr>\r\n          <tr className=\"table__listingItem\">\r\n            <td>Submitted Tasks</td>\r\n            <td\r\n              className=\"button dodgerblue bd\"\r\n              onClick={() => setOpenTasksSubmitted(true)}\r\n            >\r\n              View\r\n            </td>\r\n          </tr>\r\n        </table>\r\n      </div>\r\n      {/* child components */}\r\n      {openTasksAvailable && (\r\n        <TasksAvailable\r\n          openTasksAvailable={openTasksAvailable}\r\n          setOpenTasksAvailable={setOpenTasksAvailable}\r\n        />\r\n      )}\r\n      {openTasksOngoing && (\r\n        <TasksOngoing\r\n          openTasksOngoing={openTasksOngoing}\r\n          setOpenTasksOngoing={setOpenTasksOngoing}\r\n        />\r\n      )}\r\n      {openTasksSubmitted && (\r\n        <TasksSubmitted\r\n          openTasksSubmitted={openTasksSubmitted}\r\n          setOpenTasksSubmitted={setOpenTasksSubmitted}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default WorkCenter;\r\n","// import installed packages\r\nimport { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\n\r\n// import styles\r\nimport \"./App.css\";\r\n// import material ui items\r\n\r\n// import shared/global items\r\nimport PrivateRoute from \"./shared/PrivateRoute\";\r\n// import components/pages\r\nimport Header from \"./components/common/Header\";\r\n// import Footer from \"./components/common/Footer\";\r\nimport Home from \"./pages/Home/Home\";\r\nimport Sidebar from \"./components/common/Sidebar/Sidebar\";\r\nimport Dashboard from \"./pages/Dashboard\";\r\nimport ActivateAccount from \"./pages/ActivateAccount\";\r\nimport ResetPasswordConfirm from \"./pages/ResetPasswordConfirm\";\r\nimport NotFound from \"./pages/NotFound\";\r\nimport Profile from \"./pages/Profile\";\r\nimport MaintainOrganizations from \"./pages/systemAdmin/MaintainOrganizations/MaintainOrganizations\";\r\nimport MaintainTasks from \"./pages/organizationAdmin/Tasks/MaintainTasks\";\r\nimport MaintainWorkers from \"./pages/systemAdmin/MaintainWorkers/MaintainWorkers\";\r\n\r\n// import redux API\r\nimport { get_user } from \"./redux/actions/auth\";\r\nimport WorkCenter from \"./pages/worker/WorkCenter/WorkCenter\";\r\n\r\nfunction App(props) {\r\n  const { profile_type } = props;\r\n  const { getUser } = props;\r\n  const session_cookie = localStorage.getItem(\"session_cookie\");\r\n\r\n  useEffect(() => {\r\n    // get user on page refresh\r\n    if (session_cookie) {\r\n      getUser();\r\n    }\r\n  }, [getUser, session_cookie]);\r\n\r\n  return (\r\n    <div id=\"body-pd\">\r\n      <Router>\r\n        <Header />\r\n        <Sidebar />\r\n        <Switch>\r\n          {/* unauthenticated routes */}\r\n          <Route exact path=\"/\" component={Home} />\r\n          <Route\r\n            exact\r\n            path=\"/user/password-reset/:password_token/\"\r\n            component={ResetPasswordConfirm}\r\n          />\r\n          <Route\r\n            exact\r\n            path=\"/user/activate/:activation_token/\"\r\n            component={ActivateAccount}\r\n          />\r\n          {/* authenticated routes */}\r\n          {/* SYSTEM ADMIN ROUTES */}\r\n          {profile_type === \"System Admin\" && (\r\n            <>\r\n              <PrivateRoute\r\n                exact\r\n                path=\"/sys-admin/maintain-organizations/\"\r\n                component={MaintainOrganizations}\r\n              />\r\n              <PrivateRoute\r\n                exact\r\n                path=\"/sys-admin/maintain-workers/\"\r\n                component={MaintainWorkers}\r\n              />\r\n            </>\r\n          )}\r\n\r\n          {/* ORGANIZATION ADMIN ROUTES */}\r\n          {profile_type === \"Organization Admin\" && (\r\n            <PrivateRoute\r\n              exact\r\n              path=\"/organization-admin/maintain-tasks/\"\r\n              component={MaintainTasks}\r\n            />\r\n          )}\r\n\r\n          {/* END OF SYSTEM ADMIN LINKS */}\r\n          {/* WORKER LINKS */}\r\n          {profile_type === \"Worker\" && (\r\n            <PrivateRoute\r\n              exact\r\n              path=\"/worker/work-center/\"\r\n              component={WorkCenter}\r\n            />\r\n          )}\r\n\r\n          {/* END OF WORKER LINKS */}\r\n          <PrivateRoute exact path=\"/profile\" component={Profile} />\r\n          <PrivateRoute exact path=\"/dashboard/\" component={Dashboard} />\r\n          <Route component={NotFound} />\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    profile_type: state.auth.user?.profile_type,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getUser: () => dispatch(get_user()),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","// types import\r\nimport * as actionTypes from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  signupForm: false,\r\n  loginForm: false,\r\n  loggedIn: false,\r\n  forgotPasswordForm: false,\r\n  resendActivationForm: false,\r\n  resetPasswordConfirmForm: false,\r\n  changePasswordForm: false,\r\n  user: {},\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case actionTypes.OPEN_SIGNUP:\r\n      return {\r\n        ...state,\r\n        signupForm: true,\r\n      };\r\n    case actionTypes.CLOSE_SIGNUP:\r\n      return {\r\n        ...state,\r\n        signupForm: false,\r\n      };\r\n    case actionTypes.OPEN_LOGIN:\r\n      return {\r\n        ...state,\r\n        loginForm: true,\r\n      };\r\n    case actionTypes.CLOSE_LOGIN:\r\n      return {\r\n        ...state,\r\n        loginForm: false,\r\n      };\r\n    case actionTypes.AUTH_SUCCESS:\r\n      return { ...state, user: payload, loggedIn: true };\r\n    case actionTypes.OPEN_FORGOT_PASSWORD:\r\n      return {\r\n        ...state,\r\n        forgotPasswordForm: true,\r\n      };\r\n    case actionTypes.CLOSE_FORGOT_PASSWORD:\r\n      return {\r\n        ...state,\r\n        forgotPasswordForm: false,\r\n      };\r\n    case actionTypes.OPEN_RESEND_ACTIVATION:\r\n      return {\r\n        ...state,\r\n        resendActivationForm: true,\r\n      };\r\n    case actionTypes.CLOSE_RESEND_ACTIVATION:\r\n      return {\r\n        ...state,\r\n        resendActivationForm: false,\r\n      };\r\n    case actionTypes.OPEN_PASSWORD_RESET_CONFIRM:\r\n      return {\r\n        ...state,\r\n        resetPasswordConfirmForm: true,\r\n      };\r\n    case actionTypes.CLOSE_PASSWORD_RESET_CONFIRM:\r\n      return {\r\n        ...state,\r\n        resetPasswordConfirmForm: false,\r\n      };\r\n    case actionTypes.OPEN_CHANGE_PASSWORD:\r\n      return {\r\n        ...state,\r\n        changePasswordForm: true,\r\n      };\r\n    case actionTypes.CLOSE_CHANGE_PASSWORD:\r\n      return {\r\n        ...state,\r\n        changePasswordForm: false,\r\n      };\r\n    case actionTypes.LOGOUT:\r\n      return initialState;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default authReducer;\r\n","import {\r\n  SET_ALERT,\r\n  REMOVE_ALERT,\r\n  START_LOADING,\r\n  STOP_LOADING,\r\n} from \"../actions/types\";\r\n\r\nexport const sharedInitialState = {\r\n  alert: {\r\n    status: false,\r\n    alertType: \"\", // either success or error\r\n    detail: \"\",\r\n  },\r\n  loading: false,\r\n};\r\n\r\nconst sharedReducer = (state = sharedInitialState, action) => {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case SET_ALERT:\r\n      return {\r\n        ...state,\r\n        alert: payload,\r\n      };\r\n    case REMOVE_ALERT:\r\n      return {\r\n        ...state,\r\n        alert: payload,\r\n      };\r\n    case START_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case STOP_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default sharedReducer;\r\n","export const updateObject = (oldObject, updatedProperties) => {\r\n  return {\r\n    ...oldObject,\r\n    ...updatedProperties,\r\n  };\r\n};\r\n","import { updateObject } from \"../utility\";\r\nimport * as actionTypes from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  organizations: [],\r\n  organization_tasks: [],\r\n  workers: [],\r\n  workers_applications: [],\r\n};\r\n\r\n// add new organization\r\nconst addOrganization = (state, payload) => {\r\n  return updateObject(state, {\r\n    organizations: [...state.organizations, payload],\r\n  });\r\n};\r\n\r\n// get all organizations\r\nconst getOrganizations = (state, payload) => {\r\n  return updateObject(state, {\r\n    organizations: payload,\r\n  });\r\n};\r\n\r\nconst updateOrganization = (state, payload) => {\r\n  return updateObject(state, {\r\n    organizations: state.organizations.map((organization) =>\r\n      organization.organizationId === payload.organizationId\r\n        ? payload\r\n        : organization\r\n    ),\r\n  });\r\n};\r\n\r\n// organization admin create new task\r\nconst newOrganizationTask = (state, payload) => {\r\n  return updateObject(state, {\r\n    organization_tasks: [...state.organization_tasks, payload],\r\n  });\r\n};\r\n\r\n// organization admin get all tasks\r\nconst getAllTasks = (state, payload) => {\r\n  return updateObject(state, {\r\n    organization_tasks: payload,\r\n  });\r\n};\r\n\r\n// organization admin edit task\r\nconst editOrganizationTask = (state, payload) => {\r\n  return updateObject(state, {\r\n    organization_tasks: state.organization_tasks?.map((task) =>\r\n      task.id === payload.id ? payload : task\r\n    ),\r\n  });\r\n};\r\n\r\n// system admin get all workers\r\nconst getWorkers = (state, payload) => {\r\n  return updateObject(state, {\r\n    workers: payload.workers,\r\n    workers_applications: payload.workers_applications,\r\n  });\r\n};\r\n\r\n// system admin edit worker or application\r\nconst editWorkerOrApplication = (state, payload) => {\r\n  console.log(payload.action_type);\r\n  // edit if worker is being edited\r\n  if (payload.action_type === \"worker\") {\r\n    return updateObject(state, {\r\n      workers: state.workers?.map((worker) =>\r\n        worker.id === payload.id ? payload : worker\r\n      ),\r\n    });\r\n  }\r\n  // edit if worker application is being is being edited\r\n  else if (payload.action_type === \"worker_application\") {\r\n    return updateObject(state, {\r\n      workers_applications: state.workers_applications?.map(\r\n        (worker_application) =>\r\n          worker_application.id === payload.id ? payload : worker_application\r\n      ),\r\n    });\r\n  } else if (payload.action_type === \"worker_and_application\") {\r\n    return updateObject(state, {\r\n      workers_applications: state.workers_applications?.map(\r\n        (worker_application) =>\r\n          worker_application.id === payload.id ? payload : worker_application\r\n      ),\r\n      workers: [...state.workers, payload.worker_data],\r\n    });\r\n  }\r\n};\r\n\r\nconst workReducer = (state = initialState, action) => {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case actionTypes.ADD_ORGANIZATION:\r\n      return addOrganization(state, payload);\r\n    case actionTypes.GET_ORGANIZATIONS:\r\n      return getOrganizations(state, payload);\r\n    case actionTypes.UPDATE_ORGANIZATION:\r\n      return updateOrganization(state, payload);\r\n    case actionTypes.NEW_ORGANIZATION_TASK:\r\n      return newOrganizationTask(state, payload);\r\n    case actionTypes.GET_TASKS:\r\n      return getAllTasks(state, payload);\r\n    case actionTypes.EDIT_ORGANIZATION_TASK:\r\n      return editOrganizationTask(state, payload);\r\n    case actionTypes.GET_WORKERS:\r\n      return getWorkers(state, payload);\r\n    case actionTypes.EDIT_WORKER:\r\n      return editWorkerOrApplication(state, payload);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default workReducer;\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport auth from \"./auth\";\r\nimport shared from \"./shared\";\r\nimport work from \"./work\";\r\n\r\nexport default combineReducers({\r\n  auth,\r\n  shared,\r\n  work,\r\n});\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport reducers from \"./reducers\";\r\n\r\nconst store = createStore(\r\n  reducers,\r\n  composeWithDevTools(applyMiddleware(thunk))\r\n);\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport store from \"./redux/store\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}